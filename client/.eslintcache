[{"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/index.tsx":"1","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/reducers/store.ts":"2","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/App.tsx":"3","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/reducers/rootReducer.ts":"4","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/DesktopApp.tsx":"5","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/mobile/MobileApp.tsx":"6","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/reducers/appReducer.ts":"7","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/routes.tsx":"8","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/Header.tsx":"9","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/mobile/Footer.tsx":"10","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/GlobalStyle.tsx":"11","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/ContentContainer.tsx":"12","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/modile/MobileAppContainer.tsx":"13","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/history.ts":"14","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/theme.ts":"15","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/Menu.tsx":"16","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/headerElements/Logo.tsx":"17","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/FlexBox.tsx":"18","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountButton.tsx":"19","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/headerElements/HeaderContainer.tsx":"20","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/modile/footerElements.tsx/FooterContainer.tsx":"21","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/course/CourseSettings.tsx":"22","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/account/Account.tsx":"23","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/Dashboard.tsx":"24","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/Lesson.tsx":"25","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/course/Course.tsx":"26","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/Users.tsx":"27","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/programs/Programs.tsx":"28","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/support/Support.tsx":"29","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/Text.tsx":"30","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/menuElements/MenuElement.tsx":"31","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/GridBox.tsx":"32","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/PrimaryButton.tsx":"33","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountPhotoContainer.tsx":"34","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountPhotoText.tsx":"35","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountMenu.tsx":"36","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountPhoto.tsx":"37","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/account/CoursesContent.tsx":"38","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountMenuElement.tsx":"39","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountContainer.tsx":"40","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountContent.tsx":"41","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/account/ProfileContent.tsx":"42","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/Spinner.tsx":"43","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/Icon.tsx":"44","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/DraftLessonList.tsx":"45","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/LessonList.tsx":"46","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/programs/ProgramsTabBar.tsx":"47","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/support/Test.tsx":"48","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/programs/ProgramElement.tsx":"49","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/UserListElement.tsx":"50","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/UserProfile.tsx":"51","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/UserSearchBar.tsx":"52","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/settingsElements/SettingsInput.tsx":"53","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/settingsElements/SettingsBlockTitle.tsx":"54","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/settingsElements/SettingsBlock.tsx":"55","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/settingsElements/SettingsContainer.tsx":"56","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/SettingsContainer.tsx":"57","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/DashboardBlock.tsx":"58","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/BlockTitle.tsx":"59","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/ChartsContainer.tsx":"60","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/ChartOptions.tsx":"61","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/DashboardContainer.tsx":"62","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/CoursePerformanceContainer.tsx":"63","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/DashboardTopRowContainer.tsx":"64","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/LeftSideTitle.tsx":"65","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/SettingsIcon.tsx":"66","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/RightSide.tsx":"67","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/LeftSideContent.tsx":"68","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/RightSideContent.tsx":"69","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/RightSideTitle.tsx":"70","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/BlocksContainer.tsx":"71","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/LeftSide.tsx":"72","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/BlockItem.tsx":"73","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/LessonContentContainer.tsx":"74","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/blocks/BlockText.tsx":"75","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/blocks/BlockImage.tsx":"76","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/blocks/BlockAudio.tsx":"77","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/LessonContainer.tsx":"78","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/ProgramsContainer.tsx":"79","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/blocks/BlockVideo.tsx":"80","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/OptionBox.tsx":"81","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/RightCourseDashboard.tsx":"82","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/LeftCourseDashboard.tsx":"83","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/OptionDeleteBox.tsx":"84","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/CourseContainer.tsx":"85","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/UsersContainer.tsx":"86","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/UsersListContainer.tsx":"87","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/CourseElementImg.tsx":"88","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/CoursesListContainer.tsx":"89","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/CoursesListElement.tsx":"90","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/LessonListElement.tsx":"91","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/CourseLessonsContainer.tsx":"92","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/ProfileContentContainer.tsx":"93","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/CheckBox.tsx":"94","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/LessonListContainer.tsx":"95","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/DraftLessonListElement.tsx":"96","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/CoursesContentContainer.tsx":"97","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/LessonListElement.tsx":"98","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/CreateNewProgramButton.tsx":"99","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/ProgramsOptions.tsx":"100","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/UserCardContainer.tsx":"101","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/UserListElementContainer.tsx":"102","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/OptionTab.tsx":"103","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/UserListPhotoElement.tsx":"104","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/ProgramElement.tsx":"105","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/ProgramElementTitle.tsx":"106","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/SearchBar.tsx":"107","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/profileElements/InformationContent.tsx.tsx":"108","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/UsersBlock/UsersBlockContent.tsx":"109","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/NewUsersBlock/NewUsersBlockContainer.tsx":"110","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/TextArea.tsx":"111","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/SecondaryButton.tsx":"112","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/BlockContainer.tsx":"113","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/userCardContent/ProgramsContent.tsx":"114","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/userCardContent/PurchasesContent.tsx":"115","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/userCardContent/ProfileContent.tsx":"116","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/blockElements/PositionIcon.tsx":"117","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/blockElements/BlockOptionButton.tsx":"118","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/blockElements/Select.tsx":"119","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/blockElements/BlockDeleteButton.tsx":"120","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/blockElements/BlockImageContent.tsx":"121","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/UserProfileProgramsElement.tsx":"122","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/ProfileCardContentContainer.tsx":"123","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/PurchaseListElementContainer.tsx":"124","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/ProfilePrimaryButton.tsx":"125","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/EditIcon.tsx":"126","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/sagas/rootSaga.ts":"127","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/actions/authActions.ts":"128","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/types/authActionInterfaces.ts":"129","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/types/clientActionTypes.ts":"130","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/types/trainerActionTypes.ts":"131","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/actions/clientActions.ts":"132","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/actions/trainerActions.ts":"133","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/sagas/trainerSagas.ts":"134","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/reducers/loadingReducer.ts":"135","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/InBlockSpinner.tsx":"136","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/utils/DateSortHelpers.ts":"137","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/usersBlock/DashboardUsers.tsx":"138","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/revenueBlock/DashboardRevenue.tsx":"139","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/coursePerformanceBlock/CoursePerformance.tsx":"140","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/usersBlock/PieChartClass.jsx":"141","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/revenueBlock/RevenueChart.jsx":"142","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/usersBlock/TotalUsersPieChart.jsx":"143","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/CourseListElement.tsx":"144","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/ChartOptionTab.tsx":"145","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/SalesBlock/SalesContainer.tsx":"146","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/coursePerformanceBlock/CoursePerformanceChart.jsx":"147","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/coursePerformanceBlock/CoursePerformanceWeekly.jsx":"148","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/coursePerformanceBlock/CoursePerformanceMonthly.jsx":"149","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/utils/iCoachAPI.ts":"150","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/ClientRegistrationPage.tsx":"151","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/AddNewUserModal.tsx":"152","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/AddNewUserModalContainer.tsx":"153","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/CloseModalButton.tsx":"154","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/registrationElements/RegistrationPageContainer.tsx":"155","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/registrationElements/RegistrationPageGridRow.tsx":"156","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/FormField.tsx":"157","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/FormFieldset.tsx":"158","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/programs/CreateNewCourseModal.tsx":"159","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/CreateNewCourseModalContainer.tsx":"160","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/AuthPage.tsx":"161","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/authElements/AuthPageContainer.tsx":"162","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/authElements/AuthFormContainer.tsx":"163","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/authElements/RightSide.tsx":"164","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/authElements/LeftSide.tsx":"165","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/headerElements/AuthButton.tsx":"166","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/authElements/AuthButton.tsx":"167","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/course/NewCourse.tsx":"168","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/sagas/clientSagas.ts":"169"},{"size":290,"mtime":1611971523440,"results":"170","hashOfConfig":"171"},{"size":489,"mtime":1614538069273,"results":"172","hashOfConfig":"171"},{"size":1199,"mtime":1619319760527,"results":"173","hashOfConfig":"171"},{"size":290,"mtime":1616513710942,"results":"174","hashOfConfig":"171"},{"size":913,"mtime":1619124972596,"results":"175","hashOfConfig":"171"},{"size":629,"mtime":1614566353798,"results":"176","hashOfConfig":"171"},{"size":1420,"mtime":1616527246838,"results":"177","hashOfConfig":"171"},{"size":1666,"mtime":1618444046904,"results":"178","hashOfConfig":"171"},{"size":1181,"mtime":1611971523440,"results":"179","hashOfConfig":"171"},{"size":270,"mtime":1611971523442,"results":"180","hashOfConfig":"171"},{"size":259,"mtime":1614536592588,"results":"181","hashOfConfig":"171"},{"size":197,"mtime":1614536537042,"results":"182","hashOfConfig":"171"},{"size":150,"mtime":1611971523439,"results":"183","hashOfConfig":"171"},{"size":87,"mtime":1611971523439,"results":"184","hashOfConfig":"171"},{"size":1571,"mtime":1617050847053,"results":"185","hashOfConfig":"171"},{"size":1652,"mtime":1612129531874,"results":"186","hashOfConfig":"171"},{"size":266,"mtime":1611971523437,"results":"187","hashOfConfig":"171"},{"size":653,"mtime":1611971523435,"results":"188","hashOfConfig":"171"},{"size":413,"mtime":1611971523434,"results":"189","hashOfConfig":"171"},{"size":260,"mtime":1611971523437,"results":"190","hashOfConfig":"171"},{"size":191,"mtime":1611971523439,"results":"191","hashOfConfig":"171"},{"size":8667,"mtime":1619122323180,"results":"192","hashOfConfig":"171"},{"size":3355,"mtime":1611971523440,"results":"193","hashOfConfig":"171"},{"size":7141,"mtime":1617145256196,"results":"194","hashOfConfig":"171"},{"size":6470,"mtime":1617658415598,"results":"195","hashOfConfig":"171"},{"size":5377,"mtime":1619120324932,"results":"196","hashOfConfig":"171"},{"size":3126,"mtime":1619123471035,"results":"197","hashOfConfig":"171"},{"size":2390,"mtime":1619120131068,"results":"198","hashOfConfig":"171"},{"size":629,"mtime":1611971523442,"results":"199","hashOfConfig":"171"},{"size":514,"mtime":1614534915597,"results":"200","hashOfConfig":"171"},{"size":459,"mtime":1612129563201,"results":"201","hashOfConfig":"171"},{"size":273,"mtime":1617933221611,"results":"202","hashOfConfig":"171"},{"size":677,"mtime":1617914523587,"results":"203","hashOfConfig":"171"},{"size":230,"mtime":1611971523434,"results":"204","hashOfConfig":"171"},{"size":305,"mtime":1611971523434,"results":"205","hashOfConfig":"171"},{"size":159,"mtime":1611971523434,"results":"206","hashOfConfig":"171"},{"size":311,"mtime":1611971523434,"results":"207","hashOfConfig":"171"},{"size":6194,"mtime":1612040173467,"results":"208","hashOfConfig":"171"},{"size":270,"mtime":1611971523434,"results":"209","hashOfConfig":"171"},{"size":345,"mtime":1612037918465,"results":"210","hashOfConfig":"171"},{"size":159,"mtime":1611971523434,"results":"211","hashOfConfig":"171"},{"size":14013,"mtime":1616513149108,"results":"212","hashOfConfig":"171"},{"size":122,"mtime":1611971523434,"results":"213","hashOfConfig":"171"},{"size":226,"mtime":1611971523435,"results":"214","hashOfConfig":"171"},{"size":4447,"mtime":1614569051408,"results":"215","hashOfConfig":"171"},{"size":4531,"mtime":1618438581248,"results":"216","hashOfConfig":"171"},{"size":812,"mtime":1618444039874,"results":"217","hashOfConfig":"171"},{"size":229,"mtime":1611971523442,"results":"218","hashOfConfig":"171"},{"size":2149,"mtime":1619122240451,"results":"219","hashOfConfig":"171"},{"size":1498,"mtime":1617660701271,"results":"220","hashOfConfig":"171"},{"size":2764,"mtime":1619122711852,"results":"221","hashOfConfig":"171"},{"size":1410,"mtime":1617915642593,"results":"222","hashOfConfig":"171"},{"size":344,"mtime":1611971523438,"results":"223","hashOfConfig":"171"},{"size":263,"mtime":1611971523438,"results":"224","hashOfConfig":"171"},{"size":237,"mtime":1611971523438,"results":"225","hashOfConfig":"171"},{"size":108,"mtime":1611971523438,"results":"226","hashOfConfig":"171"},{"size":176,"mtime":1611971523436,"results":"227","hashOfConfig":"171"},{"size":353,"mtime":1614536792788,"results":"228","hashOfConfig":"171"},{"size":387,"mtime":1613765947489,"results":"229","hashOfConfig":"171"},{"size":117,"mtime":1611971523436,"results":"230","hashOfConfig":"171"},{"size":153,"mtime":1617049358288,"results":"231","hashOfConfig":"171"},{"size":155,"mtime":1614536963877,"results":"232","hashOfConfig":"171"},{"size":361,"mtime":1617051345735,"results":"233","hashOfConfig":"171"},{"size":142,"mtime":1617046402089,"results":"234","hashOfConfig":"171"},{"size":382,"mtime":1611971523436,"results":"235","hashOfConfig":"171"},{"size":306,"mtime":1611971523436,"results":"236","hashOfConfig":"171"},{"size":143,"mtime":1611971523436,"results":"237","hashOfConfig":"171"},{"size":160,"mtime":1611971523436,"results":"238","hashOfConfig":"171"},{"size":135,"mtime":1611971523436,"results":"239","hashOfConfig":"171"},{"size":418,"mtime":1611971523436,"results":"240","hashOfConfig":"171"},{"size":310,"mtime":1611971523437,"results":"241","hashOfConfig":"171"},{"size":180,"mtime":1617048429288,"results":"242","hashOfConfig":"171"},{"size":322,"mtime":1617658394469,"results":"243","hashOfConfig":"171"},{"size":184,"mtime":1611971523437,"results":"244","hashOfConfig":"171"},{"size":8414,"mtime":1617659795858,"results":"245","hashOfConfig":"171"},{"size":6964,"mtime":1611971523441,"results":"246","hashOfConfig":"171"},{"size":5277,"mtime":1617659678723,"results":"247","hashOfConfig":"171"},{"size":185,"mtime":1611971523437,"results":"248","hashOfConfig":"171"},{"size":282,"mtime":1619121840062,"results":"249","hashOfConfig":"171"},{"size":5311,"mtime":1611971523442,"results":"250","hashOfConfig":"171"},{"size":537,"mtime":1617931064421,"results":"251","hashOfConfig":"171"},{"size":221,"mtime":1611971523438,"results":"252","hashOfConfig":"171"},{"size":183,"mtime":1611971523438,"results":"253","hashOfConfig":"171"},{"size":404,"mtime":1611971523438,"results":"254","hashOfConfig":"171"},{"size":205,"mtime":1611971523438,"results":"255","hashOfConfig":"171"},{"size":200,"mtime":1614537363574,"results":"256","hashOfConfig":"171"},{"size":234,"mtime":1612118412788,"results":"257","hashOfConfig":"171"},{"size":258,"mtime":1611971523438,"results":"258","hashOfConfig":"171"},{"size":69,"mtime":1611971523434,"results":"259","hashOfConfig":"171"},{"size":302,"mtime":1611971523435,"results":"260","hashOfConfig":"171"},{"size":381,"mtime":1611971523435,"results":"261","hashOfConfig":"171"},{"size":174,"mtime":1611971523434,"results":"262","hashOfConfig":"171"},{"size":199,"mtime":1614536281349,"results":"263","hashOfConfig":"171"},{"size":141,"mtime":1611971523435,"results":"264","hashOfConfig":"171"},{"size":171,"mtime":1611971523437,"results":"265","hashOfConfig":"171"},{"size":529,"mtime":1611971523437,"results":"266","hashOfConfig":"171"},{"size":217,"mtime":1611971523434,"results":"267","hashOfConfig":"171"},{"size":506,"mtime":1611971523437,"results":"268","hashOfConfig":"171"},{"size":528,"mtime":1619121828447,"results":"269","hashOfConfig":"171"},{"size":166,"mtime":1619121720289,"results":"270","hashOfConfig":"171"},{"size":352,"mtime":1614537323628,"results":"271","hashOfConfig":"171"},{"size":419,"mtime":1612041639732,"results":"272","hashOfConfig":"171"},{"size":206,"mtime":1612042522785,"results":"273","hashOfConfig":"171"},{"size":270,"mtime":1611971523439,"results":"274","hashOfConfig":"171"},{"size":582,"mtime":1619121284263,"results":"275","hashOfConfig":"171"},{"size":238,"mtime":1611971523438,"results":"276","hashOfConfig":"171"},{"size":276,"mtime":1612042132543,"results":"277","hashOfConfig":"171"},{"size":147,"mtime":1611974173378,"results":"278","hashOfConfig":"171"},{"size":168,"mtime":1611971523436,"results":"279","hashOfConfig":"171"},{"size":188,"mtime":1611971523436,"results":"280","hashOfConfig":"171"},{"size":219,"mtime":1611971523435,"results":"281","hashOfConfig":"171"},{"size":625,"mtime":1611971523435,"results":"282","hashOfConfig":"171"},{"size":244,"mtime":1611971523437,"results":"283","hashOfConfig":"171"},{"size":1725,"mtime":1617739185005,"results":"284","hashOfConfig":"171"},{"size":2689,"mtime":1617739657867,"results":"285","hashOfConfig":"171"},{"size":1714,"mtime":1617738638496,"results":"286","hashOfConfig":"171"},{"size":267,"mtime":1611971523437,"results":"287","hashOfConfig":"171"},{"size":381,"mtime":1611971523437,"results":"288","hashOfConfig":"171"},{"size":89,"mtime":1611971523437,"results":"289","hashOfConfig":"171"},{"size":309,"mtime":1611971523437,"results":"290","hashOfConfig":"171"},{"size":146,"mtime":1611971523437,"results":"291","hashOfConfig":"171"},{"size":335,"mtime":1611971523439,"results":"292","hashOfConfig":"171"},{"size":192,"mtime":1611971523438,"results":"293","hashOfConfig":"171"},{"size":219,"mtime":1611971523439,"results":"294","hashOfConfig":"171"},{"size":502,"mtime":1614534479532,"results":"295","hashOfConfig":"171"},{"size":286,"mtime":1614534147892,"results":"296","hashOfConfig":"171"},{"size":1744,"mtime":1619321493684,"results":"297","hashOfConfig":"171"},{"size":1356,"mtime":1619319729565,"results":"298","hashOfConfig":"171"},{"size":1768,"mtime":1619319415432,"results":"299","hashOfConfig":"171"},{"size":660,"mtime":1614791276272,"results":"300","hashOfConfig":"171"},{"size":4201,"mtime":1618715483693,"results":"301","hashOfConfig":"171"},{"size":490,"mtime":1614791651760,"results":"302","hashOfConfig":"171"},{"size":3885,"mtime":1618715544543,"results":"303","hashOfConfig":"171"},{"size":5645,"mtime":1619321244733,"results":"304","hashOfConfig":"171"},{"size":1312,"mtime":1616516795567,"results":"305","hashOfConfig":"171"},{"size":201,"mtime":1616514867242,"results":"306","hashOfConfig":"171"},{"size":2684,"mtime":1617227451324,"results":"307","hashOfConfig":"171"},{"size":1614,"mtime":1617047875183,"results":"308","hashOfConfig":"171"},{"size":4264,"mtime":1617117815438,"results":"309","hashOfConfig":"171"},{"size":7640,"mtime":1619122472975,"results":"310","hashOfConfig":"171"},{"size":2655,"mtime":1617047941987,"results":"311","hashOfConfig":"171"},{"size":7363,"mtime":1617050010203,"results":"312","hashOfConfig":"171"},{"size":2294,"mtime":1617047966679,"results":"313","hashOfConfig":"171"},{"size":433,"mtime":1617049702990,"results":"314","hashOfConfig":"171"},{"size":247,"mtime":1617049674390,"results":"315","hashOfConfig":"171"},{"size":360,"mtime":1617051548366,"results":"316","hashOfConfig":"171"},{"size":6273,"mtime":1617145346154,"results":"317","hashOfConfig":"171"},{"size":3074,"mtime":1617659598592,"results":"318","hashOfConfig":"171"},{"size":3483,"mtime":1617227458417,"results":"319","hashOfConfig":"171"},{"size":271,"mtime":1617836692109,"results":"320","hashOfConfig":"171"},{"size":5174,"mtime":1617934291349,"results":"321","hashOfConfig":"171"},{"size":3352,"mtime":1617930928531,"results":"322","hashOfConfig":"171"},{"size":308,"mtime":1617913395647,"results":"323","hashOfConfig":"171"},{"size":155,"mtime":1617915383904,"results":"324","hashOfConfig":"171"},{"size":298,"mtime":1617933002275,"results":"325","hashOfConfig":"171"},{"size":177,"mtime":1617931489865,"results":"326","hashOfConfig":"171"},{"size":185,"mtime":1617932914486,"results":"327","hashOfConfig":"171"},{"size":238,"mtime":1617933598402,"results":"328","hashOfConfig":"171"},{"size":542,"mtime":1618241869722,"results":"329","hashOfConfig":"171"},{"size":325,"mtime":1618241826491,"results":"330","hashOfConfig":"171"},{"size":3321,"mtime":1619319693874,"results":"331","hashOfConfig":"171"},{"size":570,"mtime":1618269645432,"results":"332","hashOfConfig":"171"},{"size":266,"mtime":1618277360664,"results":"333","hashOfConfig":"171"},{"size":380,"mtime":1618277940389,"results":"334","hashOfConfig":"171"},{"size":380,"mtime":1618277950125,"results":"335","hashOfConfig":"171"},{"size":474,"mtime":1611971523436,"results":"336","hashOfConfig":"171"},{"size":607,"mtime":1618277884863,"results":"337","hashOfConfig":"171"},{"size":8993,"mtime":1618716008123,"results":"338","hashOfConfig":"171"},{"size":326,"mtime":1619127434640,"results":"339","hashOfConfig":"171"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},"1pj98xl",{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"342"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"342"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"342"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"342"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"342"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"342"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"342"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"342"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"342"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"342"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"342"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"342"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"342"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"342"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"547"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"342"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"342"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"342"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"623"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"342"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"342"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"342"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"342"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"647"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"647"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"647"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"662","messages":"663","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"647"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"647"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"342"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"342"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"690"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"695","messages":"696","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"342"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"342"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"342"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"342"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/index.tsx",[],["714","715"],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/reducers/store.ts",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/App.tsx",["716"],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/reducers/rootReducer.ts",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/DesktopApp.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/mobile/MobileApp.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/reducers/appReducer.ts",["717"],"import _ from 'lodash';\nimport { AppReducer } from '../../../interfaces/reducerInterfaces/AppInterface';\nimport { AUTH_CLIENT_SUCCESS, AUTH_TRAINER_SUCCESS } from '../types/authActionInterfaces';\nimport { CLIENT_FETCH_DATA_SUCCESS } from '../types/clientActionTypes';\nimport { FETCH_TRAINER_CLIENTS_SUCCESS, FETCH_TRAINER_COURSES_SUCCESS, FETCH_TRAINER_SALES_SUCCESS, TRAINER_FETCH_DATA_SUCCESS } from '../types/trainerActionTypes';\n\nconst Initial_State: AppReducer = {\n    authStatus: false,\n}\n\nexport const appReducer = (state = Initial_State, action: any) => {\n    switch (action.type){\n        case AUTH_TRAINER_SUCCESS: \n            return { ...state, authStatus: true, userType: \"TRAINER\", userData: { id: 'TrainerID' } };\n        case AUTH_CLIENT_SUCCESS:\n            return { ...state, authStatus: true, userType: \"CLIENT\" , userData: { id: 'ClientID' } };\n        case TRAINER_FETCH_DATA_SUCCESS: \n            return { ...state, userData: action.payload };\n        case CLIENT_FETCH_DATA_SUCCESS: \n            return { ...state, userData: action.payload };\n        case FETCH_TRAINER_CLIENTS_SUCCESS: \n            return { ...state, clients: action.payload };\n        case FETCH_TRAINER_COURSES_SUCCESS: \n            return { ...state, courses: action.payload };\n        case FETCH_TRAINER_SALES_SUCCESS:\n            return { ...state, sales: action.payload };\n        default:\n            return state;\n    }\n}","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/routes.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/Header.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/mobile/Footer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/GlobalStyle.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/ContentContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/modile/MobileAppContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/history.ts",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/theme.ts",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/Menu.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/headerElements/Logo.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/FlexBox.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountButton.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/headerElements/HeaderContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/modile/footerElements.tsx/FooterContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/course/CourseSettings.tsx",["718","719"],"import React, { useState } from 'react';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport GridBox from '../../../../elements/desktop/commonElements/GridBox';\nimport PrimaryButton from '../../../../elements/desktop/commonElements/PrimaryButton';\nimport SettingsBlock from '../../../../elements/desktop/settingsElements/SettingsBlock';\nimport SettingsBlockTitle from '../../../../elements/desktop/settingsElements/SettingsBlockTitle';\nimport SettingsContainer from '../../../../elements/desktop/settingsElements/SettingsContainer';\nimport SettingsInput from '../../../../elements/desktop/settingsElements/SettingsInput';\nimport { theme } from '../../../../theme';\nimport '../../../../css/main.css';\nimport { Course } from '../../../../../../interfaces/courseInterfaces/Course';\nimport { AppState } from '../../../../reducers/rootReducer';\nimport { connect } from 'react-redux';\n\nconst SETTINGS_CONTAINER_THEME = {\n    justifyContent: theme.justifyContent.flexEnd,\n    alignItems: theme.alignItems.center,\n    flexDirection: theme.flexDirection.column\n}\nconst DETAILS_BLOCK_THEME = {\n    justifyContent: theme.justifyContent.center,\n    alignItems: theme.alignItems.center,\n    flexDirection: theme.flexDirection.column,\n    margin: '1em 0 1em 0'\n}\nconst CENTER_THEME = {\n    alignItems: theme.alignItems.center,\n    justifyContent: theme.justifyContent.center\n}\nconst SAVE_BUTTON_THEME = {\n    color: theme.colors.white,\n    backgroundColor: 'green',\n    hoverBackgroundColor: theme.colors.white,\n    hoverColor: 'green'\n}\nconst COURSE_SETTINGS_BLOCK_THEME = {\n    gridTemplateColumns: '1fr 1fr'\n}\nconst COURSE_SETTINGS_BLOCK_LEFT_COLUMN_THEME = {\n    justifyContent: theme.justifyContent.flexEnd,\n    margin: '1em'\n}\nconst COURSE_SETTINGS_BLOCK_RIGHT_COLUMN_THEME = {\n    justifyContent: theme.justifyContent.flexStart,\n    margin: '1em',\n    flexDirection: theme.flexDirection.column\n}\n\ninterface OwnProps {\n    match: any,\n    location: any\n}\n\ntype Props = MapStateToProps & OwnProps;\n\nconst CourseSetting: React.FC<Props> = (props) => {\n    console.log(props);\n    const [fileSource, setFileSource] = useState<any>();\n    const [fileFormData, setFileFormData] = useState<any>();\n\n    const onImageChange = (event: any) => {\n        if(event.target.files.length !== 0) {\n            const file = event.target.files[0];\n            const reader = new FileReader();\n            const data = new FormData();\n\n            reader.onload = (e: any) => {\n            setFileSource(e.target.result);\n            data.append('file', file);\n            // setFileFormData(data);\n            setFileFormData(data);        \n        }\n        reader.readAsDataURL(file);\n        }\n    }\n\n    return(\n        <SettingsContainer className=\"hideScrollbar\">\n            <FlexBox theme={SETTINGS_CONTAINER_THEME} >\n                <SettingsBlock>\n                    <SettingsBlockTitle>\n                        <div style={{ fontSize: '1.5em'}}>\n                            Course Details\n                        </div>\n                    </SettingsBlockTitle>\n                    <FlexBox theme={DETAILS_BLOCK_THEME}>\n                        <FlexBox>\n                            <SettingsInput placeholder=\"Course Name\" />\n                        </FlexBox>\n                        <FlexBox>\n                            <SettingsInput placeholder=\"Course Description\" style={{ height: '6em' }} />\n                        </FlexBox>\n                    </FlexBox>\n                    <FlexBox theme={CENTER_THEME}>\n                        <PrimaryButton theme={SAVE_BUTTON_THEME}>\n                            Save\n                        </PrimaryButton>\n                    </FlexBox>\n                </SettingsBlock>\n                <SettingsBlock>\n                    <SettingsBlockTitle>\n                        <div style={{ fontSize: '1.5em'}}>\n                            Course Settings\n                        </div>\n                    </SettingsBlockTitle>\n                    <FlexBox theme={DETAILS_BLOCK_THEME} style={{ flexDirection: 'column'}}>\n                        <GridBox theme={COURSE_SETTINGS_BLOCK_THEME}>\n                            <FlexBox theme={COURSE_SETTINGS_BLOCK_LEFT_COLUMN_THEME}>\n                                Content visibility:\n                            </FlexBox>\n                            <FlexBox theme={COURSE_SETTINGS_BLOCK_RIGHT_COLUMN_THEME}>\n                                <FlexBox>\n                                    <input type=\"radio\" id='first' name=\"contentVisibility\" /><label htmlFor=\"first\">Only current lesson is visible</label>\n                                </FlexBox>\n                                <FlexBox>\n                                    <input type=\"radio\" id='second' name=\"contentVisibility\" /><label htmlFor=\"second\">Current and previous lessons are visible</label>\n                                </FlexBox>\n                                <FlexBox>\n                                    <input type=\"radio\" id='third' name=\"contentVisibility\"/><label htmlFor=\"third\">Keep all lessons visible</label>\n                                </FlexBox>\n                            </FlexBox>\n                        </GridBox>\n                        <GridBox theme={COURSE_SETTINGS_BLOCK_THEME}>\n                            <FlexBox theme={COURSE_SETTINGS_BLOCK_LEFT_COLUMN_THEME}>\n                                Access to a course content:\n                            </FlexBox>\n                            <FlexBox theme={COURSE_SETTINGS_BLOCK_RIGHT_COLUMN_THEME}>\n                                <FlexBox>\n                                    <input type=\"radio\" id='first' name=\"accessToCourse\" /><label htmlFor=\"first\">After the previos one is completed</label>\n                                </FlexBox>\n                                <FlexBox>\n                                    <input type=\"radio\" id='second' name=\"accessToCourse\" /><label htmlFor=\"second\">Every day</label>\n                                </FlexBox>\n                            </FlexBox>\n                        </GridBox>\n                        <GridBox theme={COURSE_SETTINGS_BLOCK_THEME}>\n                            <FlexBox theme={COURSE_SETTINGS_BLOCK_LEFT_COLUMN_THEME}>\n                                Program start:\n                            </FlexBox>\n                            <FlexBox theme={COURSE_SETTINGS_BLOCK_RIGHT_COLUMN_THEME}>\n                                <FlexBox>\n                                    <input type=\"radio\" id='first' name=\"programStart\" /><label htmlFor=\"first\">After purchase</label>\n                                </FlexBox>\n                                <FlexBox>\n                                    <input type=\"radio\" id='second' name=\"programStart\" /><label htmlFor=\"second\">On</label>\n                                </FlexBox>\n                            </FlexBox>\n                        </GridBox>\n                    </FlexBox>\n                    <FlexBox theme={CENTER_THEME}>\n                        <PrimaryButton theme={SAVE_BUTTON_THEME}>\n                            Save\n                        </PrimaryButton>\n                    </FlexBox>\n                </SettingsBlock>\n                <SettingsBlock>\n                    <SettingsBlockTitle>\n                        <div style={{ fontSize: '1.5em'}}>\n                            Course background image\n                        </div>\n                    </SettingsBlockTitle>\n                    <FlexBox theme={DETAILS_BLOCK_THEME} style={{ width: '50em'}}>\n                        <FlexBox>\n                            <SettingsInput accept=\"image/*\" placeholder=\"Course Name\" type=\"file\" onChange={(e) => onImageChange(e)} />\n                        </FlexBox>\n                        <FlexBox>\n                            <img style={{ width: '26em', height: '16em' }} src={fileSource} />\n                        </FlexBox>\n                    </FlexBox>\n                    <FlexBox theme={CENTER_THEME}>\n                        <PrimaryButton onClick={() => console.log(\"Sending file to the server\", fileFormData)} theme={SAVE_BUTTON_THEME}  >\n                            Save\n                        </PrimaryButton>\n                    </FlexBox>\n                </SettingsBlock>\n            </FlexBox>\n        </SettingsContainer>\n    );\n}\n\ninterface MapStateToProps {\n    course: Course\n}\n\nconst mapStateToProps = (state: AppState, ownProps: OwnProps): MapStateToProps => ({\n    course: state.app.courses.filter((course: Course) => { if (course._id === ownProps.match.params._id) { return course }} )[0]\n});\n\nexport default connect(mapStateToProps)(CourseSetting);","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/account/Account.tsx",["720","721","722","723","724","725"],"import React from 'react';\nimport AccountContainer from '../../../../elements/desktop/accountElements/AccountContainer';\nimport AccountContent from '../../../../elements/desktop/accountElements/AccountContent';\nimport AccountInput from '../../../../elements/desktop/accountElements/AccountInput';\nimport AccountMenu from '../../../../elements/desktop/accountElements/AccountMenu';\nimport AccountMenuElement from '../../../../elements/desktop/accountElements/AccountMenuElement';\nimport AccountPhoto from '../../../../elements/desktop/accountElements/AccountPhoto';\nimport AccountPhotoContainer from '../../../../elements/desktop/accountElements/AccountPhotoContainer';\nimport AccountPhotoText from '../../../../elements/desktop/accountElements/AccountPhotoText';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport PrimaryButton from '../../../../elements/desktop/commonElements/PrimaryButton';\nimport { theme } from '../../../../theme';\nimport CoursesContent from './CoursesContent';\nimport ProfileContent from './ProfileContent';\n\nconst PAGE_TITLE_THEME = {\n    justifyContent: theme.justifyContent.center,\n    fontSize: '1.5em',\n    width: '100%'\n}\n\nconst TITLE_THEME = {\n    margin: '1em 0 0.5em 2em',\n    width: '100%'\n}\n\nconst INPUT_THEME = {\n    width: '100%'\n}\n\nconst SAVE_BUTTON_THEME = {\n    color: theme.colors.white,\n    backgroundColor: 'green',\n    hoverBackgroundColor: theme.colors.white,\n    hoverColor: 'green'\n}\n\nconst ACCOUNT_MENU_THEME = {\n    justifyContent: theme.justifyContent.flexStart,\n    alignItems: theme.alignItems.center,\n    flexDirection: theme.flexDirection.column,\n    margin: '2em 0 0 0'\n}\n\nconst ACCOUNT_MENU = [\n    {\n        id: 0,\n        label: 'Profile'\n    },\n    {\n        id: 1,\n        label: 'Courses'\n    }\n]\n\nconst renderContent = (activeMenu: number) => {\n    switch (activeMenu) {\n        default: \n            return <ProfileContent />;\n        case 1:\n            return <CoursesContent />;\n    }\n}\n\nconst Account: React.FC = (props) => {\n    const [hoverPhoto, setHoverPhoto] = React.useState(false);\n    const [activeMenu, setActiveMenu] = React.useState(0);\n\n    return(\n        <AccountContainer>\n            <AccountMenu>\n                <FlexBox>\n                    <AccountPhotoContainer onMouseOver={() => setHoverPhoto(true)}>\n                        {hoverPhoto ? <AccountPhotoText style={{ background: hoverPhoto ? 'rgb(255, 255, 255, 0.5)' : '(255, 255, 255, 0)'}} onMouseOut={() => setHoverPhoto(false)} >Change Photo</AccountPhotoText> : null}\n                        <AccountPhoto />\n                    </AccountPhotoContainer>\n                </FlexBox>\n                <FlexBox theme={ACCOUNT_MENU_THEME}>\n                    {ACCOUNT_MENU.map((element, i) => {\n                        return(\n                            <AccountMenuElement style={{ borderBottom: activeMenu === element.id ? `1px solid ${theme.colors.primary}` : `none` }} onClick={() => setActiveMenu(element.id) }>\n                                {element.label}\n                            </AccountMenuElement>\n                        );\n                    })}\n                </FlexBox>\n            </AccountMenu>\n            <AccountContent>\n                {renderContent(activeMenu)}\n            </AccountContent>\n        </AccountContainer>\n    );\n}\n\nexport default Account;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/Dashboard.tsx",["726","727","728","729","730","731","732"],"import React, { useState } from 'react';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport BlockTitle from '../../../../elements/desktop/dashboardElements/BlockTitle';\nimport DashboardBlock from '../../../../elements/desktop/dashboardElements/DashboardBlock';\nimport DashboardContainer from '../../../../elements/desktop/dashboardElements/DashboardContainer';\nimport DashboardTopRowContainer from '../../../../elements/desktop/dashboardElements/DashboardTopRowContainer';\nimport { theme } from '../../../../theme';\nimport DashboardNewUsers from './usersBlock/DashboardNewUsers';\nimport DashboardRevenue from './revenueBlock/DashboardRevenue';\nimport DashboardUsers from './usersBlock/DashboardUsers';\nimport { AppState } from '../../../../reducers/rootReducer';\nimport { Dispatch } from 'redux';\nimport { Client } from '../../../../../../interfaces/clientInterfaces/Client';\nimport { Sale } from '../../../../../../interfaces/Interfaces';\nimport { Course } from '../../../../../../interfaces/courseInterfaces/Course';\nimport { connect, useStore } from 'react-redux';\nimport { fetchTrainerClientsRequest, fetchTrainerCoursesRequest, fetchTrainerSalesRequest } from '../../../../actions/trainerActions';\nimport CoursePerformance from './coursePerformanceBlock/CoursePerformance';\nimport CoursePerformanceContainer from '../../../../elements/desktop/dashboardElements/CourseAnalize/CoursePerformanceContainer';\nimport SalesContainer from '../../../../elements/desktop/dashboardElements/SalesBlock/SalesContainer';\n\nconst NEW_USERS_TITLE_FLEXBOX = {\n    justifyContent: theme.justifyContent.sb\n}\n\ntype Props = MapStateToProps & MapDispatchToProps;\n\nconst Dashboard: React.FC<Props> = (props) => {\n\n    React.useEffect(() => {\n        props.fetchTrainerCourses(props.trainerId);\n        props.fetchTrainerSales(props.trainerId);\n    }, [])\n\n    const [userBlockTimePeriod, setUserBlockTimePeriod] = useState(0);\n    const [activeUserBlockTimePeriod, setActiveUserBlockTimePeriod] = useState(0);\n    const [revenueBlockTimePeriod, setRevenueBlockTimePeriod] = useState(\"W\");\n\n    return(\n        <DashboardContainer>\n            <DashboardTopRowContainer>\n                <DashboardBlock>\n                    <BlockTitle>\n                        Users\n                    </BlockTitle>\n                    <DashboardUsers timePeriod={userBlockTimePeriod} isTrainerClientsLoading={props.isTrainerClientsLoading} clients={props.users} fetchTrainerClients={props.fetchTrainerClients} trainerId={props.trainerId}/>\n                </DashboardBlock>\n                {/* <DashboardBlock>\n                    <BlockTitle>\n                        <FlexBox theme={NEW_USERS_TITLE_FLEXBOX} style={{ width: '100%'}} >\n                            <FlexBox>\n                                New Users\n                            </FlexBox>\n                            <FlexBox>\n                                <select onChange={(e) => console.log(e.target)} style={{ outline: 'none', border: 'none' }} >\n                                    <option id=\"0\" style={{ outline: 'none', border: 'none'}}>\n                                        Last 30 days\n                                    </option>\n                                    <option id=\"1\" style={{ outline: 'none', border: 'none'}}>\n                                        Last 7 days\n                                    </option>\n                                    <option id=\"2\" style={{ outline: 'none', border: 'none'}}>\n                                        Last 6 months\n                                    </option>\n                                    <option id=\"3\" style={{ outline: 'none', border: 'none'}}>\n                                        Last year\n                                    </option>\n                                </select>\n                            </FlexBox>\n                        </FlexBox>\n                    </BlockTitle> \n                    <DashboardNewUsers isTrainerClientsLoading={props.isTrainerClientsLoading} clients={props.users} fetchTrainerClients={props.fetchTrainerClients} trainerId={props.trainerId} />\n                </DashboardBlock> */}\n                <DashboardBlock>\n                <BlockTitle>\n                        <FlexBox theme={NEW_USERS_TITLE_FLEXBOX} style={{ width: '100%'}} >\n                            <FlexBox>\n                                Revenue\n                            </FlexBox>\n                            <FlexBox>\n                                <select onChange={(e) => setRevenueBlockTimePeriod(e.target.value)} style={{ outline: 'none', border: 'none' }}>\n                                    <option value=\"W\" style={{ outline: 'none', border: 'none'}}>\n                                        Week\n                                    </option>\n                                    <option value=\"M\" style={{ outline: 'none', border: 'none'}}>\n                                        Month\n                                    </option>\n                                    <option value=\"Y\" style={{ outline: 'none', border: 'none'}}>\n                                        Year\n                                    </option>\n                                </select>\n                            </FlexBox>\n                        </FlexBox>\n                    </BlockTitle>\n                    <DashboardRevenue timePeriod={revenueBlockTimePeriod} isTrainerSalesLoading={props.isTrainerSalesLoading} sales={props.sales} />\n                </DashboardBlock>\n            </DashboardTopRowContainer>\n            <CoursePerformance sales={props.sales} isTrainerSalesLoading={props.isTrainerSalesLoading} isTrainerCoursesLoading={props.isTrainerCoursesLoading} courses={props.courses} trainerId={props.trainerId} />\n            <SalesContainer>\n                Test\n            </SalesContainer>\n        </DashboardContainer>\n    );\n}\n\ninterface MapStateToProps {\n    users: Client[],\n    sales: Sale[],\n    courses: Course[],\n    isTrainerClientsLoading?: boolean,\n    isTrainerSalesLoading?: boolean,\n    isTrainerCoursesLoading?: boolean,\n    trainerId: string\n}\n\ninterface MapDispatchToProps {\n    fetchTrainerClients: (trainerId: string) => void,\n    fetchTrainerSales: (trainerId: string) => void,\n    fetchTrainerCourses: (trainerId: string) => void\n}\n\nconst mapStateToProps = (state: AppState):MapStateToProps => ({\n    users: state.app.clients,\n    sales: state.app.sales,\n    courses: state.app.courses,\n    isTrainerClientsLoading: state.isLoading.isTrainerClientsLoading,\n    isTrainerCoursesLoading: state.isLoading.isTrainerCoursesLoading,\n    isTrainerSalesLoading: state.isLoading.isTrainerSalesLoading,\n    trainerId: state.app.userData.id\n});\n\nconst mapStateToDispatch = (dispatch: Dispatch): MapDispatchToProps => ({\n    fetchTrainerClients: (trainerId) => dispatch(fetchTrainerClientsRequest(trainerId)),\n    fetchTrainerCourses: (trainerId) => dispatch(fetchTrainerCoursesRequest(trainerId)),\n    fetchTrainerSales: (trainerId) => dispatch(fetchTrainerSalesRequest(trainerId)),\n})\n\nexport default connect(mapStateToProps, mapStateToDispatch)(Dashboard);","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/Lesson.tsx",["733"],"import React, { useState } from 'react';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport PrimaryButton from '../../../../elements/desktop/commonElements/PrimaryButton';\nimport BlockItem from '../../../../elements/desktop/lessonElements/BlockItem';\nimport BlocksContainer from '../../../../elements/desktop/lessonElements/BlocksContainer';\nimport LessonContainer from '../../../../elements/desktop/lessonElements/LessonContainer';\nimport LessonContentContainer from '../../../../elements/desktop/lessonElements/LessonContentContainer';\nimport SettingsInput from '../../../../elements/desktop/settingsElements/SettingsInput';\nimport { theme } from '../../../../theme';\nimport Icon from '../../../../elements/desktop/commonElements/Icon';\nimport history from '../../../../history';\nimport BlockText from './blocks/BlockText';\nimport BlockAudio from './blocks/BlockAudio';\nimport BlockVideo from './blocks/BlockVideo';\nimport BlockImage from './blocks/BlockImage';\nimport Spinner from '../../../../elements/desktop/Spinner';\nimport \"../../../../css/main.css\";\nimport { Lesson } from '../../../../../../interfaces/lessonInterfaces/Lesson';\n\n\n\nconst LEFT_COLUMN_LESSON_CONTAINER = {\n    flexDirection: theme.flexDirection.column\n}\n\nconst LESSON_TITLE_THEME = {\n    justifyContent: theme.justifyContent.sb,\n    alignItems: theme.alignItems.center,\n}\nconst SAVE_BUTTON_THEME = {\n    color: theme.colors.white,\n    hoverBackgroundColor: theme.colors.white,\n}\nconst BLOCKS_THEME= {\n    flexWrap: theme.flexWrap.wrap,\n    justifyContent: theme.justifyContent.center,\n}\nconst BLOCK_CONTENT_THEME = {\n    justifyContent: theme.justifyContent.center,\n    alignItems: theme.alignItems.center\n}\n\nconst SELECTED_BLOCK_CONTENT_THEME = {\n    justifyContent: theme.justifyContent.center,\n    alignItems: theme.alignItems.center,\n    backgroundColor: theme.colors.blue,\n}\n\nconst BACK_ARROW_THEME = {\n    justifyContent: theme.justifyContent.flexStart,\n    margin: '0.5em',\n    fontSize: '1.5em'\n}\n\nconst BLOCKS = [\n    {\n        type: 'TEXT',\n    },\n    {\n        type: 'AUDIO'\n    },\n    {\n        type: 'VIDEO'\n    },\n    {\n        type: 'IMAGE'\n    },\n    {\n        type: 'TEXT',\n    },\n    {\n        type: 'AUDIO'\n    },\n    {\n        type: 'VIDEO'\n    },\n    {\n        type: 'IMAGE'\n    }\n]\n\nconst isLessonLoading = false;\n\nconst BLOCK_MENU = [\n    {\n        id: 1,\n        type: \"TEXT\",\n        title: \"Text\",\n    },\n    {\n        id: 2,\n        type: \"VIDEO\",\n        title: \"Video\",\n    },\n    {\n        id: 3,\n        type: \"AUDIO\",\n        title: \"Audio\",\n    },\n    {\n        id: 4,\n        type: \"IMAGE\",\n        title: \"Image\",\n    }\n]\n\n\nconst renderBlockMenu = (blockId: number, setBlockId: React.Dispatch<React.SetStateAction<number>>) => {\n    return BLOCK_MENU.map((block) => {\n        return (\n            <BlockItem onClick={() => setBlockId(block.id)} theme={ block.id !== blockId ? BLOCK_CONTENT_THEME : SELECTED_BLOCK_CONTENT_THEME }>\n                <FlexBox theme={BLOCK_CONTENT_THEME} style={{ height: '100%'}}>\n                    {block.title}\n                </FlexBox>\n            </BlockItem>\n        );\n    })\n}\n\ninterface OwnProps {\n    location: any,\n    match: any\n}\n\ntype Props = OwnProps;\n\nconst LessonComponent: React.FC<Props> = (props) => {\n\n    const [blockId, setBlockId] = useState<number>(0);\n\n    if (isLessonLoading) {\n        return(\n            <Spinner className=\"spinner\" />\n        );\n    } else {\n        console.log(props.location)\n        return(\n            <LessonContainer className=\"hideScrollbar\">\n                <FlexBox theme={LEFT_COLUMN_LESSON_CONTAINER}>\n                    <FlexBox theme={LESSON_TITLE_THEME} style={{ height: '3em' }}>\n                        <FlexBox theme={BACK_ARROW_THEME} onClick={() => history.goBack()}>\n                            <Icon>\n                                <i className=\"fas fa-chevron-left\"></i>\n                            </Icon>\n                        </FlexBox>\n                        <SettingsInput placeholder=\"Current Lesson Name\" value={props.location.state.title}/>\n                        <PrimaryButton theme={SAVE_BUTTON_THEME}>\n                                Save\n                        </PrimaryButton>\n                    </FlexBox>\n                    <LessonContentContainer>\n                        <FlexBox style={{ textAlign: 'center', color: '#AAA', borderBottom: '1px solid #AAA', paddingBottom: '0.5em' }}>\n                            Create a lesson content by selecting and adding the content blocks\n                        </FlexBox>\n                        {BLOCKS.map((block, i) => {\n                            switch (block.type){\n                                case 'TEXT':\n                                    return <BlockText />\n                                case 'AUDIO': \n                                    return <BlockAudio />\n                                case 'VIDEO':\n                                    return <BlockVideo />\n                                case 'IMAGE':\n                                    return <BlockImage />\n                                default: \n                                    return(\n                                        <FlexBox style={{ textAlign: 'center', color: '#AAA', borderBottom: '1px solid #AAA', paddingBottom: '0.5em' }}>\n                                            Create a lesson content by selecting and adding the content blocks\n                                        </FlexBox>\n                                    );\n                            }\n                        })}\n                    </LessonContentContainer>\n                </FlexBox>\n                <FlexBox>\n                    <BlocksContainer>\n                        <FlexBox style={{ textAlign: 'center', color: '#AAA', borderBottom: '1px solid #AAA', paddingBottom: '0.5em' }}>\n                            Select the Block you want to add to your lesson\n                        </FlexBox>\n                        <FlexBox theme={BLOCKS_THEME} style={{ marginTop: '1em' }}>\n                            {renderBlockMenu(blockId, setBlockId)}\n                            <PrimaryButton theme={SAVE_BUTTON_THEME}>\n                                    Add\n                            </PrimaryButton>\n                        </FlexBox>\n                    </BlocksContainer>\n                </FlexBox>\n            </LessonContainer>\n        );\n    }\n}\n\nexport default LessonComponent;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/course/Course.tsx",["734","735","736"],"import React, { useState } from 'react';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport GridBox from '../../../../elements/desktop/commonElements/GridBox';\nimport Icon from '../../../../elements/desktop/commonElements/Icon';\nimport CourseContainer from '../../../../elements/desktop/programsElements/CourseContainer';\nimport LeftCourseDashboard from '../../../../elements/desktop/programsElements/LeftCourseDashboard';\nimport OptionBox from '../../../../elements/desktop/programsElements/OptionBox';\nimport RightCourseDashboard from '../../../../elements/desktop/programsElements/RightCourseDashboard';\nimport SettingsContainer from '../../../../elements/desktop/dashboardElements/SettingsContainer';\nimport SettingsIcon from '../../../../elements/desktop/dashboardElements/SettingsIcon';\nimport { theme } from '../../../../theme';\nimport DraftLessonList from '../lesson/DraftLessonList';\nimport LessonList from '../lesson/LessonList';\nimport history from '../../../../history';\nimport OptionDeleteBox from '../../../../elements/desktop/programsElements/OptionDeleteBox';\nimport { Course } from '../../../../../../interfaces/courseInterfaces/Course';\nimport { AppState } from '../../../../reducers/rootReducer';\nimport { connect } from 'react-redux';\n\nconst TOP_FLEXBOX_THEME = {\n    justifyContent: theme.justifyContent.sb,\n    alignItems: theme.alignItems.flexStart\n}\nconst BACK_ARROW_THEME = {\n    justifyContent: theme.justifyContent.flexStart,\n    margin: '0.5em'\n}\nconst TITLE_THEME = {\n    justifyContent: theme.justifyContent.center,\n    alignItems: theme.alignItems.flexStart,\n    fontSize: '2em'\n}\nconst BOTTOM_GRIDBOX_THEME = {\n    gridTemplateColumns: '1fr 1fr'\n}\nconst OPTIONS_FLEXBOX_THEME = {\n    justifyContent: theme.justifyContent.sb,\n    alignItems: theme.alignItems.flexStart,\n}\n\nconst DRAFT_LESSONS_OPTIONS_FLEXBOX_THEME = {\n    justifyContent: theme.justifyContent.sb,\n    alignItems: theme.alignItems.center,\n    padding: '0.5em'\n}\n\nconst DRAFT_LESSONS_TITLE_FLEXBOX_THEME = {\n    justifyContent: theme.justifyContent.center,\n    alignItems: theme.alignItems.center,\n    fontSize: '1.6em'\n}\n\ninterface OwnProps {\n    match: any,\n    location: any\n}\n\ntype Props = OwnProps;\n\nconst Program: React.FC<Props> = (props) => {\n    const [isEditMode, setEditMode] = useState(false);\n\n    console.log(props)\n    return(\n        <CourseContainer>\n            <FlexBox theme={TOP_FLEXBOX_THEME}>\n                <FlexBox theme={BACK_ARROW_THEME}  onClick={() => history.goBack()}>\n                    <Icon style={{ fontSize: '1.5em '}}>\n                        <i className=\"fas fa-chevron-left\"></i>\n                    </Icon>\n                </FlexBox>\n                <FlexBox theme={TITLE_THEME}>\n                    {props.location.state.title}\n                </FlexBox>\n                <SettingsContainer>\n                    <SettingsIcon onClick={() => history.push(`/programs/${props.location.state.id}/settings`) }>\n                        <i className=\"fas fa-cog\"></i>\n                    </SettingsIcon>\n                </SettingsContainer>\n            </FlexBox>\n            <GridBox theme={BOTTOM_GRIDBOX_THEME}>\n                <LeftCourseDashboard>\n                    <FlexBox theme={OPTIONS_FLEXBOX_THEME}>\n                        <FlexBox>\n                            <OptionBox>\n                                <i className=\"fas fa-plus\" title=\"Add new lesson\" />\n                            </OptionBox>\n                            <OptionBox >\n                                <i className=\"fas fa-user-plus\" title=\"Assign new user\" />\n                            </OptionBox>\n                            <OptionBox style={{ backgroundColor: isEditMode ? theme.colors.blue : '' }} onClick={() => setEditMode(!isEditMode)}>\n                                <i className=\"far fa-edit\" title=\"Edit course\" />\n                            </OptionBox>\n                        </FlexBox>\n                        <FlexBox>\n                            <OptionDeleteBox>\n                                <i className=\"fas fa-trash-alt\"></i>\n                            </OptionDeleteBox>\n                        </FlexBox>\n                    </FlexBox>\n                    <LessonList lessons={props.location.state.lessons} isEditMode={isEditMode} courseId={props.location.state.id} />\n                </LeftCourseDashboard>\n                <RightCourseDashboard>\n                    <FlexBox theme={DRAFT_LESSONS_OPTIONS_FLEXBOX_THEME} style={{ borderBottom: '1px solid grey' }}>\n                        <FlexBox theme={DRAFT_LESSONS_TITLE_FLEXBOX_THEME} style={{ height: '1.5em'}}>\n                            Draft Lessons\n                        </FlexBox>\n                        <FlexBox theme={DRAFT_LESSONS_TITLE_FLEXBOX_THEME}>\n                            All drafts\n                        </FlexBox>\n                    </FlexBox>\n                    <DraftLessonList isEditMode={isEditMode} />\n                </RightCourseDashboard>\n            </GridBox>\n        </CourseContainer>\n    );\n}\n\n// interface MapStateToProps {\n//     course: Course,\n// }\n\n// const mapStateToProps = (state: AppState, ownProps: OwnProps): MapStateToProps => ({\n//     course: state.app.courses.filter((course: Course) => { if (course.id === ownProps.match.params.id) { return course } })[0]\n// });\n\nexport default Program;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/Users.tsx",["737"],"import React, { useEffect, useState } from 'react';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport UsersContainer from '../../../../elements/desktop/usersElements/UsersContainer';\nimport UsersListContainer from '../../../../elements/desktop/usersElements/UsersListContainer';\nimport UserListElement from './UserListElement';\nimport UserSearchBar from './UserSearchBar';\nimport '../../../../css/main.css';\nimport UserProfile from './UserProfile';\nimport { Client } from '../../../../../../interfaces/clientInterfaces/Client';\nimport { AppState } from '../../../../reducers/rootReducer';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { fetchTrainerClientsRequest } from '../../../../actions/trainerActions';\nimport InBlockSpinner from '../../../../elements/desktop/InBlockSpinner';\nimport AddNewUserModal from './AddNewUserModal';\n\ntype Props = MapStateToProps & MapDispatchToProps;\n\nconst Users: React.FC<Props> = (props) => {\n\n    const [userCard, setUserCard] = useState({});\n    const [addNewUser, setAddNewUser] = useState(false);\n\n    useEffect(() => {\n        props.fetchUsers(props.trainerId)\n    }, []);\n    \n    if (props.isTrainerClientsLoading) {\n        return(\n            <InBlockSpinner>\n                <div className=\"spinner\">\n                    \n                </div>\n            </InBlockSpinner>\n        ); \n    } else {\n        console.log(props.users)\n        return(\n            <UsersContainer>\n                {addNewUser ? <AddNewUserModal closeModal={setAddNewUser} trainerId={props.trainerId} /> : null }\n                <FlexBox theme={{ flexDirection: 'column' }}>\n                    <FlexBox>\n                        <UserSearchBar openModal={setAddNewUser} />\n                    </FlexBox>\n                    <FlexBox />\n                    <FlexBox style={{ margin: '1em 0 -1em 4em' }}>\n                        Name\n                    </FlexBox>\n                    {props.users.map((user, i) => {\n                        return (\n                            <UsersListContainer key={i} onClick={() => setUserCard(user) } className=\"hideScrollbar\">\n                                <UserListElement user={user} />\n                            </UsersListContainer>\n                        );\n                    })}\n                </FlexBox>\n                <FlexBox>\n                    <UserProfile userCard={userCard} />\n                </FlexBox>\n            </UsersContainer>\n    );\n    }\n}\n\ninterface MapStateToProps {\n    users: Client[],\n    trainerId: string,\n    isTrainerClientsLoading?: boolean\n}\n\ninterface MapDispatchToProps {\n    fetchUsers: (trainerId: string) => void\n}\n\nconst mapStateToProps = (state: AppState): MapStateToProps => ({\n    users: state.app.clients,\n    trainerId: state.app.userData.id,\n    isTrainerClientsLoading: state.isLoading.isTrainerClientsLoading\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => ({\n    fetchUsers: (trainerId) => dispatch(fetchTrainerClientsRequest(trainerId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/programs/Programs.tsx",["738","739","740"],"import React, { useEffect, useState } from 'react';\nimport ProgramElement from './ProgramElement';\nimport '../../../../css/main.css';\nimport ProgramsContainer from '../../../../elements/desktop/programsElements/ProgramsContainer';\nimport GridBox from '../../../../elements/desktop/commonElements/GridBox';\nimport ProgramsTabBar from './ProgramsTabBar';\nimport { AppState } from '../../../../reducers/rootReducer';\nimport { Course } from '../../../../../../interfaces/courseInterfaces/Course';\nimport { connect } from 'react-redux';\nimport InBlockSpinner from '../../../../elements/desktop/InBlockSpinner';\nimport { Dispatch } from 'redux';\nimport { fetchTrainerCoursesRequest } from '../../../../actions/trainerActions';\nimport CreateNewCourseModal from './CreateNewCourseModal';\n\nconst renderProgramList = (courses: Course[]) => {\n    return courses.map((e, i) => {\n        return(\n            <ProgramElement course={e} key={i} />\n        );\n    })\n}\n\ntype Props = MapStateToProps & MapDispatchToProps;\n\nconst Dashboard: React.FC<Props> = (props) => {\n    useEffect(() => {\n        props.fetchCourses(props.trainerId)\n    }, [])\n\n    if (props.isTrainerCoursesLoading){\n        return(\n            <InBlockSpinner>\n                <div className=\"spinner\">\n                    \n                </div>\n            </InBlockSpinner>\n        ); \n    } else {\n        return(\n            <GridBox theme={{ gridTemplateRows: '1fr 20fr' }}>\n                <ProgramsTabBar trainerId={props.trainerId} />\n                <ProgramsContainer className=\"hideScrollbar\" style={{ position: 'relative', overflowY: 'scroll'}}>\n                        {renderProgramList(props.courses)}\n                </ProgramsContainer>\n            </GridBox>\n        );\n    }\n}\n\ninterface MapStateToProps {\n    courses: Course[],\n    isTrainerCoursesLoading?: boolean,\n    trainerId: string\n\n}\n\ninterface MapDispatchToProps {\n    fetchCourses: (trainerId: string) => void,\n}\n\nconst mapStateToProps = (state: AppState): MapStateToProps => ({\n    courses: state.app.courses,\n    isTrainerCoursesLoading: state.isLoading.isTrainerCoursesLoading,\n    trainerId: state.app.userData.id\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => ({\n    fetchCourses: (trainerId) => dispatch(fetchTrainerCoursesRequest(trainerId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/support/Support.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/Text.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/menuElements/MenuElement.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/GridBox.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/PrimaryButton.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountPhotoContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountPhotoText.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountMenu.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountPhoto.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/account/CoursesContent.tsx",["741","742"],"import React from 'react';\nimport CourseLessonsContainer from '../../../../elements/desktop/accountElements/CourseLessonsContainer';\nimport CoursesContentContainer from '../../../../elements/desktop/accountElements/CoursesContentContainer';\nimport CoursesContentElement from '../../../../elements/desktop/accountElements/CoursesListElement';\nimport '../../../../css/main.css';\nimport CoursesListContainer from '../../../../elements/desktop/accountElements/CoursesListContainer';\nimport { theme } from '../../../../theme';\nimport Select from '../../../../elements/desktop/lessonElements/blockElements/Select';\nimport Text from '../../../../elements/desktop/commonElements/Text';\nimport LessonListElement from '../../../../elements/desktop/accountElements/LessonListElement';\nimport { countReset } from 'console';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport CourseElementImg from '../../../../elements/desktop/usersElements/CourseElementImg';\n\nconst COURSES = [\n    {\n        id: 0,\n        title: 'Course 1',\n        lessons: [\n            {\n                id: 0,\n                title: 'Course 1 Lesson 1'\n            },\n            {\n                id: 1,\n                title: 'Course 1 Lesson 2'\n            },\n            {\n                id: 2,\n                title: 'Course 1 Lesson 3'\n            },\n            {\n                id: 3,\n                title: 'Course 1 Lesson 4'\n            },\n            {\n                id: 4,\n                title: 'Course 1 Lesson 5'\n            }, \n        ]\n    },\n    {\n        id: 1,\n        title: 'Course 2',\n        lessons: [\n            {\n                id: 0,\n                title: 'Course 2 Lesson 1'\n            },\n            {\n                id: 1,\n                title: 'Course 2 Lesson 2'\n            },\n            {\n                id: 2,\n                title: 'Course 2 Lesson 3'\n            },\n            {\n                id: 3,\n                title: 'Course 2 Lesson 4'\n            },\n        ]\n    },\n    {\n        id: 2,\n        title: 'Course 3',\n        lessons: [\n            {\n                id: 0,\n                title: 'Course 3 Lesson 1'\n            },\n            {\n                id: 1,\n                title: 'Course 3 Lesson 2'\n            },\n            {\n                id: 2,\n                title: 'Course 3 Lesson 3'\n            },\n            {\n                id: 3,\n                title: 'Course 3 Lesson 4'\n            },\n        ]\n    },\n    {\n        id: 3,\n        title: 'Course 4',\n        lessons: [\n            {\n                id: 0,\n                title: 'Course 4 Lesson 1'\n            },\n            {\n                id: 1,\n                title: 'Course 4 Lesson 2'\n            },\n            {\n                id: 2,\n                title: 'Course 4 Lesson 3'\n            },\n        ]\n    },\n    {\n        id: 4,\n        title: 'Course 5',\n        lessons: [\n            {\n                id: 0,\n                title: 'Course 5 Lesson 1'\n            },\n            {\n                id: 1,\n                title: 'Course 5 Lesson 2'\n            },\n            {\n                id: 2,\n                title: 'Course 5 Lesson 3'\n            },\n            {\n                id: 3,\n                title: 'Course 5 Lesson 4'\n            },\n        ]\n    },\n];\n\nconst TITLE_THEME = {\n    justifyContent: theme.justifyContent.center,\n    alignItems: theme.alignItems.center\n}\n\nconst COURSE_TITLE_THEME = {\n    alignItems: theme.alignItems.center,\n    justifyContent: theme.justifyContent.center,\n    flexDirection: theme.flexDirection.column\n}\n\n\nconst getStyle = (courseId: number, selectedCourseId: number) => {\n    return {\n        background: courseId === selectedCourseId ? theme.colors.lightGrey : theme.colors.white,\n        //background: courseId === selectedCourseId ? '#90c9ff' : 'white',\n        borderBottom: '1px solid lightgrey',\n        borderRight: courseId === selectedCourseId ? 'none' : '1px solid lightgrey'\n    }\n}\n\nconst CoursesContent: React.FC = (props) => {\n    const [selectedCourse, setSelectedCourse] = React.useState(0);\n\n\n\n    const renderCourseList = () => {\n        return COURSES.map((course,i) => {\n            return(\n                <CoursesContentElement key={i} style={getStyle(course.id, selectedCourse)} onClick={() => setSelectedCourse(course.id)}>\n                    <CourseElementImg>            \n                        {course.title}\n                    </CourseElementImg>\n                    <FlexBox theme={COURSE_TITLE_THEME}>\n                        <FlexBox>\n                            {course.title}\n                        </FlexBox>\n                        <FlexBox>\n                            Course Description\n                        </FlexBox>\n                    </FlexBox>\n                </CoursesContentElement>\n            )\n        });\n    }\n\n    const renderLessonList = () => {\n        return COURSES[selectedCourse].lessons.map((lesson, i) => {\n            return(\n                <LessonListElement key={i}>\n                    {lesson.title}\n                </LessonListElement>\n            );\n        })\n    }\n\n    return(\n        <CoursesContentContainer>\n            <CoursesListContainer>\n                <Text theme={TITLE_THEME} style={{  height: '2em', background: theme.colors.mainBlue, color: 'white', borderRadius: '0.2em 0 0 0', fontSize: '1.2em'  }}>\n                    My Courses\n                </Text>\n                <div className=\"hideScrollbar\" style={{ margin: '0.5em 0 0.5em 0.5em', overflow: 'scroll', flexDirection: 'column', position: 'relative', height: '35em' }}>\n                    {renderCourseList()}\n                </div>\n            </CoursesListContainer>\n            <CourseLessonsContainer className=\"hideScrollbar\">\n                <Text theme={TITLE_THEME} style={{ height: '2em', background: theme.colors.mainBlue, color: 'white', borderLeft: '1px solid white', borderRadius: '0 0.2em 0 0', fontSize: '1.2em'  }}>\n                    Course Lessons\n                </Text>\n                {renderLessonList()}\n            </CourseLessonsContainer>\n        </CoursesContentContainer>\n    );\n}\n\nexport default CoursesContent;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountMenuElement.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/AccountContent.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/account/ProfileContent.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/Spinner.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/Icon.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/DraftLessonList.tsx",["743","744","745","746","747","748","749","750","751"],"import React, { useState } from 'react';\nimport \"../../../../css/main.css\";\nimport { connect } from 'react-redux';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport CheckBox from '../../../../elements/desktop/commonElements/CheckBox';\nimport LessonListContainer from '../../../../elements/desktop/lessonElements/LessonListContainer';\nimport DraftLessonListElement from '../../../../elements/desktop/lessonElements/DraftLessonListElement';\nimport { AppState } from '../../../../reducers/rootReducer';\n\ninterface OwnProps {\n    isEditMode: boolean\n}\n\ntype Props = OwnProps & MapStateToProps;\n\nconst DraftLessonList: React.FC<Props> = (props) => {\n\n    const [isDragging, setDragging] = useState(false);\n    const [lessonList, setLessonList] = useState(props.draftLessons);\n    const [draggingItem, setDraggingItem] = useState(-1);\n    const [draggingNode, setDraggingNode] = useState(null);\n\n    const getStyle = (i: number) => {\n        if (draggingItem === i) {\n            return '1px dashed grey'\n        }\n    }\n\n    const handleDragStart = (e: any, i: number) => {\n        setDragging(true);\n        setDraggingNode(e.currentTarget);\n        setDraggingItem(i);\n    }\n\n    const handleDragEnter = (e: any) => {\n        console.log('Want to put this lesson to draft');\n        console.log(e.target);\n        // if (draggingNode !== e.currentTarget) {\n        //     setLessonList((prevState: any) => {\n        //         let newList = prevState;\n        //         newList.push(e.target);\n        //         return newList;\n        //     })\n        // } else {\n        //     console.log('Match')\n        // }\n    }\n\n    const handleDragEnd = () => {\n        setDraggingItem(-1);\n        setDraggingNode(null);\n        setDragging(false);\n        console.log('Need to rewrite array with the edited indexes')\n    }\n\n\n    if(props.isEditMode){\n        console.log(lessonList)\n        return(\n            <div className=\"hideScrollbar\" style={{ position: 'relative', overflowY: 'scroll'}}>\n                <LessonListContainer\n                    onDragEnter={(e) => handleDragEnter(e.currentTarget)}\n                    onDrop={(e) => console.log('This lesson is in draft now')}\n                >\n                    {/* {props.draftLessons.map((lesson, i) => {\n                        return(\n                            <DraftLessonListElement \n                                draggable \n                                key={lesson.id}\n                                onDragStart={(e) => handleDragStart(e, i)}\n                                onDragEnd={() => handleDragEnd()}\n                                style={{ border: isDragging ? getStyle(i) : 'none', cursor: 'move' }}\n                            > \n                                <FlexBox theme={{ justifyContent: 'center'}}>\n                                    <CheckBox />\n                                </FlexBox>\n                                <FlexBox>\n                                    {lesson.title}\n                                </FlexBox>\n                                <FlexBox>\n                                    <i className=\"fas fa-bars\"></i>\n                                </FlexBox>\n                            </DraftLessonListElement>\n                        );\n                    })} */}\n                </LessonListContainer>\n            </div>\n        );\n    } else {\n        return(\n            <div className=\"hideScrollbar\" style={{ position: 'relative', overflowY: 'scroll'}}>\n                <LessonListContainer>\n                    {/* {props.draftLessons.map((lesson) => {\n                        return(\n                            <DraftLessonListElement key={lesson.id}> \n                                <FlexBox theme={{ justifyContent: 'center'}}>\n                                </FlexBox>\n                                <FlexBox>\n                                    {lesson.title}\n                                </FlexBox>\n                                <FlexBox>\n                                </FlexBox>\n                            </DraftLessonListElement>\n                        );\n                    })} */}\n                </LessonListContainer>\n            </div>\n        );\n    }\n}\n\ninterface MapStateToProps {\n    draftLessons: any\n}\n\nconst mapStateToProps = (state: AppState): MapStateToProps => ({\n    draftLessons: state.app\n})\n\nexport default connect(mapStateToProps)(DraftLessonList);","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/LessonList.tsx",["752"],"import React, { useState } from 'react';\nimport LessonListElement from '../../../../elements/desktop/lessonElements/LessonListElement';\nimport LessonListContainer from '../../../../elements/desktop/lessonElements/LessonListContainer';\nimport '../../../../css/main.css';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport CheckBox from '../../../../elements/desktop/commonElements/CheckBox';\nimport history from '../../../../history';\nimport { Lesson } from '../../../../../../interfaces/lessonInterfaces/Lesson';\n\ninterface OwnProps {\n    isEditMode: boolean,\n    lessons: Lesson[],\n    courseId: string\n}\n\ntype Props = OwnProps;\n\nconst LessonList: React.FC<Props> = (props) => {\n    const [isDragging, setDragging] = useState(false);\n    const [lessonList, setLessonList] = useState(props.lessons);\n    const [draggingItem, setDraggingItem] = useState(-1);\n    const [draggingNode, setDraggingNode] = useState(null);\n    const [lessonEditList, setLessonEditList] = useState<string[]>([]);\n\n    const getStyle = (i: number) => {\n        if (draggingItem === i) {\n            return '1px dashed grey'\n        }\n    }\n\n    const handleDragStart = (e: any, i: number) => {\n        setDragging(true);\n        setDraggingNode(e.currentTarget);\n        setDraggingItem(i);\n    }\n\n    const handleDragEnter = (e: any, i: number) => {\n        if (draggingNode !== e.currentTarget) {\n            setLessonList((prevState: any) => {\n                let newList = prevState;\n                newList.splice(i, 0, newList.splice(draggingItem, 1)[0]);\n                setDraggingItem(i);\n                return newList;\n            })\n        } else {\n            console.log('Match')\n        }\n    }\n\n    const handleDragEnd = () => {\n        setDraggingItem(-1);\n        setDraggingNode(null);\n        setDragging(false);\n        console.log('Need to rewrite array with the edited indexes')\n    }\n    if (props.isEditMode){\n        return(\n        <div className=\"hideScrollbar\" style={{ position: 'relative', overflowY: 'scroll'}}>\n            <LessonListContainer>\n                {props.lessons.map((lesson: Lesson, i: number) => {\n                    return (\n                        <LessonListElement \n                            draggable \n                            key={lesson.id}\n                            onDragStart={(e) => handleDragStart(e, i)}\n                            onDragEnter={(e) => handleDragEnter(e, i)}\n                            onDragOver={(e) => {e.preventDefault()}}\n                            onDragEnd={() => handleDragEnd()}\n                            style={{ border: isDragging ? getStyle(i) : 'none', cursor: 'move' }}\n                        >  \n                            <FlexBox theme={{ justifyContent: 'center', margin: '0 0.3em 0 0.3em' }}>\n                                <CheckBox onChange={(e) => setLessonEditList([...lessonEditList, lesson.id])} />\n                            </FlexBox>\n                            <FlexBox>\n                                {lesson.title}\n                            </FlexBox>\n                            <FlexBox style={{ marginRight: '1em' }}>\n                                <i className=\"fas fa-bars\"></i>\n                            </FlexBox>\n                        </LessonListElement>\n                    );\n                })}\n            </LessonListContainer>\n        </div>\n        );\n    } else {\n        console.log(props.lessons)\n        return(\n            <div className=\"hideScrollbar\" style={{ position: 'relative', overflowY: 'scroll'}}>\n                <LessonListContainer>\n                    {props.lessons.map((lesson: Lesson, i: number) => {\n                        return (\n                            <LessonListElement key={lesson.id} onClick={() => history.push({\n                                pathname: `/programs/${props.courseId}/lesson/${lesson.id}`,\n                                state: lesson\n                            })}>   \n                                <FlexBox>\n                                </FlexBox>\n                                <FlexBox theme={{ justifyContent: 'flex-start'}}>\n                                    {lesson.title}\n                                </FlexBox>\n                                <FlexBox>\n                                </FlexBox>\n                            </LessonListElement>\n                        );\n                    })}\n                </LessonListContainer>\n            </div>\n        );\n    }\n}\n\n\nexport default LessonList;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/programs/ProgramsTabBar.tsx",["753","754"],"import React from 'react';\nimport AccountButton from '../../../../elements/desktop/accountElements/AccountButton';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport CreateNewProgramButton from '../../../../elements/desktop/programsElements/CreateNewProgramButton';\nimport ProgramsOptions from '../../../../elements/desktop/programsElements/ProgramsOptions';\nimport history from '../../../../history';\n\ninterface Props {\n    trainerId: string\n}\n\nconst ProgramsTabBar: React.FC<Props> = (props) => {\n    return(\n        <ProgramsOptions>\n            <CreateNewProgramButton onClick={() => history.push('/createNewCourse', props.trainerId)}>\n                + Create New Course\n            </CreateNewProgramButton>\n        </ProgramsOptions>\n    );\n}\n\nexport default ProgramsTabBar;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/support/Test.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/programs/ProgramElement.tsx",["755"],"import React from 'react';\nimport ProgramElementTitle from '../../../../elements/desktop/programsElements/ProgramElementTitle';\nimport SettingsContainer from '../../../../elements/desktop/dashboardElements/SettingsContainer';\nimport SettingsIcon from '../../../../elements/desktop/dashboardElements/SettingsIcon';\nimport ProgramElement from '../../../../elements/desktop/programsElements/ProgramElement';\nimport history from '../../../../history';\nimport Text from '../../../../elements/desktop/commonElements/Text';\nimport { theme } from '../../../../theme';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport { Course } from '../../../../../../interfaces/courseInterfaces/Course';\nimport { url } from 'inspector';\n\nconst goToSettings = (e: any, course: Course) => {\n    e.preventDefault();\n    e.stopPropagation();\n    history.push(`/programs/${course._id}/settings`);\n}\n\ninterface OwnProps {\n    course: Course\n}\n\nconst TITLE_THEME = {\n    justifyContent: theme.justifyContent.center,\n    alignItems: theme.alignItems.center,\n    fontSize: '1.5em',\n    color: theme.colors.white\n}\n\nconst Element: React.FC<OwnProps> = (props) => {\n    console.log(props.course);\n    return(\n        <ProgramElement theme={{ backgroundImage: props.course.imageURL }} onClick={() => history.push({\n            pathname: `/programs/${props.course._id}`,\n            state: props.course \n            })}>\n            <SettingsContainer>\n                <FlexBox style={{ backgroundColor: 'rgb(255, 255, 255, 1)', height: '2em', width: '2em', justifyContent: 'center', alignItems: 'center', borderRadius: '0 0.2em 0 0.2em' }}>\n                    <SettingsIcon onClick={(e) => e.target === e.currentTarget ? null : goToSettings(e, props.course) }>\n                        <i className=\"fas fa-cog\"></i>\n                    </SettingsIcon>\n                </FlexBox>  \n            </SettingsContainer>\n            <ProgramElementTitle>\n                <Text theme={TITLE_THEME}>\n                    {props.course.title}\n                </Text>\n            </ProgramElementTitle>\n        </ProgramElement>\n    );\n}\n\nexport default Element;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/UserListElement.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/UserProfile.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/UserSearchBar.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/settingsElements/SettingsInput.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/settingsElements/SettingsBlockTitle.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/settingsElements/SettingsBlock.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/settingsElements/SettingsContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/SettingsContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/DashboardBlock.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/BlockTitle.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/ChartsContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/ChartOptions.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/DashboardContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/CoursePerformanceContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/DashboardTopRowContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/LeftSideTitle.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/SettingsIcon.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/RightSide.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/LeftSideContent.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/RightSideContent.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/RightSideTitle.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/BlocksContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/LeftSide.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/BlockItem.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/LessonContentContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/blocks/BlockText.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/blocks/BlockImage.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/blocks/BlockAudio.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/LessonContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/ProgramsContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/lesson/blocks/BlockVideo.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/OptionBox.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/RightCourseDashboard.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/LeftCourseDashboard.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/OptionDeleteBox.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/CourseContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/UsersContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/UsersListContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/CourseElementImg.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/CoursesListContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/CoursesListElement.tsx",["756"],"import styled from 'styled-components';\nimport { theme } from '../../../theme';\n\nexport default styled.div`\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    height: 12em;\n    grid-template-columns: 1fr 1fr;\n    overflow-y: auto;\n    :hover {\n        cursor: pointer;\n    }\n`","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/LessonListElement.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/CourseLessonsContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/ProfileContentContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/CheckBox.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/LessonListContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/DraftLessonListElement.tsx",[],["757","758"],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/CoursesContentContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/LessonListElement.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/CreateNewProgramButton.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/ProgramsOptions.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/UserCardContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/UserListElementContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/OptionTab.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/UserListPhotoElement.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/ProgramElement.tsx",["759"],"import styled from 'styled-components';\nimport BACKGROUND from '../../../images/programBackground.jpg';\n\nexport default styled.div`\n    width: 25em;\n    height: 16em;\n    border-radius: 0.3em;\n    box-shadow: 1px 1px 5px grey;\n    margin: 1em;\n    transition: 0.1s;\n    display: grid;\n    grid-template-rows: 2fr 1fr;\n    background-image: url(data:image/jpeg;base64, ${props => props.theme.backgroundImage});\n    background-repeat: no-repeat;\n    background-size: cover;\n    :hover {\n        transition: 0.1s;\n        box-shadow: 1px 1px 10px grey;\n        cursor: pointer;\n    }\n`","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/ProgramElementTitle.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/SearchBar.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/profileElements/InformationContent.tsx.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/UsersBlock/UsersBlockContent.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/NewUsersBlock/NewUsersBlockContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/TextArea.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/SecondaryButton.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/BlockContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/userCardContent/ProgramsContent.tsx",["760","761"],"import React from 'react';\nimport { Client } from '../../../../../../../interfaces/clientInterfaces/Client';\nimport FlexBox from '../../../../../elements/desktop/commonElements/FlexBox';\nimport PrimaryButton from '../../../../../elements/desktop/commonElements/PrimaryButton';\nimport ProfileCardContentContainer from '../../../../../elements/desktop/usersElements/ProfileCardContentContainer';\nimport UserProfileProgramsElement from '../../../../../elements/desktop/usersElements/UserProfileProgramsElement';\nimport { theme } from '../../../../../theme';\n\nconst CONTENT_ELEMENT = {\n    margin: '0.5em'\n}\n\nconst ASSIGN_NEW_COURSE_BUTTON = {\n    color: theme.colors.white,\n    backgroundColor: 'green',\n    hoverBackgroundColor: theme.colors.white,\n    hoverColor: 'green'\n}\n\nconst renderClientCourses = (userCard: Client) => {\n    return userCard.activeCourses.map((course) => {\n        return (\n            <UserProfileProgramsElement>\n             {course.title}\n            </UserProfileProgramsElement>\n        );\n    })\n}\n\ninterface Props {\n    userCard: Client\n}\n\nconst ProgramsContent: React.FC<Props> = (props) => {\n    if (!props.userCard.id) {\n        return(\n            <div style={{ color: theme.colors.grey, marginTop: '2em' }}>\n                Select the user from your user list to open the details\n            </div>\n        );\n    } else {\n        return(\n            <ProfileCardContentContainer style={{ width: '100%' }}>\n                {renderClientCourses(props.userCard)}\n                <PrimaryButton theme={ASSIGN_NEW_COURSE_BUTTON}>\n                    Assign New Course\n                </PrimaryButton>\n            </ProfileCardContentContainer>\n        );\n    }\n}\n\nexport default ProgramsContent;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/userCardContent/PurchasesContent.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/userCardContent/ProfileContent.tsx",["762","763"],"import React from 'react';\nimport { Client } from '../../../../../../../interfaces/clientInterfaces/Client';\nimport FlexBox from '../../../../../elements/desktop/commonElements/FlexBox';\nimport InBlockSpinner from '../../../../../elements/desktop/InBlockSpinner';\nimport ProfileCardContentContainer from '../../../../../elements/desktop/usersElements/ProfileCardContentContainer';\nimport UserCardContainer from '../../../../../elements/desktop/usersElements/UserCardContainer';\nimport { theme } from '../../../../../theme';\n\nconst CONTENT_ELEMENT = {\n    margin: '0.5em'\n}\n\ninterface Props {\n    userCard: Client\n}\n\nconst ProfileContent: React.FC<Props> = (props) => {\n\n    if (!props.userCard.id) {\n        return(\n            <div style={{ color: theme.colors.grey, marginTop: '2em' }}>\n                Select the user from your user list to open the details\n            </div>\n        );\n    } else {\n        return(\n            <ProfileCardContentContainer style={{ alignItems: 'flex-start' }}>\n                <FlexBox>\n                    <FlexBox theme={CONTENT_ELEMENT}>\n                        Email: \n                    </FlexBox>\n                    <FlexBox theme={CONTENT_ELEMENT}>\n                        {props.userCard.contacts.email}\n                    </FlexBox>\n                </FlexBox>\n                <FlexBox>\n                    <FlexBox theme={CONTENT_ELEMENT}>\n                        Phone: \n                    </FlexBox>\n                    <FlexBox theme={CONTENT_ELEMENT}>\n                        {props.userCard.contacts.phone}\n                    </FlexBox>\n                </FlexBox>\n            </ProfileCardContentContainer>\n        );\n    }\n}\n\nexport default ProfileContent;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/blockElements/PositionIcon.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/blockElements/BlockOptionButton.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/blockElements/Select.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/blockElements/BlockDeleteButton.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/lessonElements/blockElements/BlockImageContent.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/UserProfileProgramsElement.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/ProfileCardContentContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/PurchaseListElementContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/ProfilePrimaryButton.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/accountElements/EditIcon.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/sagas/rootSaga.ts",["764"],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/actions/authActions.ts",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/types/authActionInterfaces.ts",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/types/clientActionTypes.ts",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/types/trainerActionTypes.ts",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/actions/clientActions.ts",[],["765","766"],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/actions/trainerActions.ts",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/sagas/trainerSagas.ts",["767"],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/reducers/loadingReducer.ts",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/InBlockSpinner.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/utils/DateSortHelpers.ts",["768","769","770","771","772","773","774","775"],"import { abort } from \"process\";\nimport { Course } from \"../../../interfaces/courseInterfaces/Course\";\nimport { Sale } from \"../../../interfaces/Interfaces\";\n\nexport const sortArrayToday = (array: any[]) => {\n    const currentDate = new Date();\n    const priorDate = new Date();\n    priorDate.setDate(currentDate.getDate()-1);\n\n    return array.filter((arrayItem) => {\n        if (arrayItem.date <= currentDate && arrayItem.date >= priorDate) {\n            return arrayItem;\n        }\n    });\n\n}\n\nexport const sortArrayWeek = (array: any[]) => {\n    const currentDate = new Date();\n    const priorDate = new Date();\n    priorDate.setDate(currentDate.getDate()-7);\n\n    return array.filter((arrayItem) => {\n        if (arrayItem.date <= currentDate && arrayItem.date >= priorDate) {\n            return arrayItem;\n        }\n    });\n}\n\nexport const sortArrayMonth = (array: any[]) => {\n    const currentDate = new Date();\n    const priorDate = new Date();\n    priorDate.setDate(currentDate.getMonth()-1);\n\n    return array.filter((arrayItem) => {\n        if (arrayItem.date <= currentDate && arrayItem.date >= priorDate) {\n            return arrayItem;\n        }\n    });\n}\n\nexport const sortWeekEveryday = (course: Course, sales: Sale[]) => {\n    const currentDate = new Date();\n    const priorDate = new Date();\n    let weekValues: any[] = [];\n    console.log(sales);\n    for (let i = 0; i <= 6; i++) {\n\n    }\n    return weekValues;\n}\n\nexport const renderWeekdaySalesRevenue = (sales: Sale[]) => {\n    const currentDate = new Date();\n    const priorDate = new Date();\n    let weekRevenue: number[] = [0];\n    for (let i = 6; i >= 0; i--) {\n        priorDate.setDate(currentDate.getDate()-i);\n        let dayRevenue = weekRevenue[weekRevenue.length-1];\n        sales.filter((sale) => {\n            if (sale.date.getDate() === priorDate.getDate()) {\n                dayRevenue += sale.price;\n            } else {\n                dayRevenue += 0;\n            }\n        });\n        weekRevenue.push(dayRevenue);\n    }\n    return weekRevenue;\n}\n\nexport const renderMonthlySalesRevenue = (sales: Sale[]) => {\n    const currentDate = new Date();\n    const priorDate = new Date();\n    let yearRevenue: number[] = [0];\n    for (let i = 9; i >= 0; i--) {\n        priorDate.setMonth(currentDate.getMonth()-i);\n        let monthRevenue = yearRevenue[yearRevenue.length-1];\n        sales.filter((sale) => {\n            if (sale.date.getMonth() === priorDate.getMonth()) {\n                monthRevenue += sale.price;\n            } else {\n                monthRevenue += 0;\n            }\n        });\n        yearRevenue.push(monthRevenue);\n    }\n    console.log(yearRevenue);\n    return yearRevenue;\n}","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/usersBlock/DashboardUsers.tsx",["776"],"import React from 'react';\nimport { Client } from '../../../../../../../interfaces/clientInterfaces/Client';\nimport UsersBlockContent from '../../../../../elements/desktop/dashboardElements/UsersBlock/UsersBlockContent';\nimport InBlockSpinner from '../../../../../elements/desktop/InBlockSpinner';\nimport PieChartClass from './PieChartClass';\nimport TotalUsersPie from './TotalUsersPieChart';\n\n\ninterface Props {\n    clients: Client[],\n    isTrainerClientsLoading?: boolean,\n    fetchTrainerClients: (trainerId: string) => void,\n    trainerId: string,\n    timePeriod: number\n}\n\nconst DashboardUsers: React.FC<Props> = (props) => {\n\n    React.useEffect(() => {\n        props.fetchTrainerClients(props.trainerId);\n        console.log('Fetching Trainer CLients', props.trainerId)\n    }, [])\n\n    if (props.isTrainerClientsLoading){\n        return(\n            <InBlockSpinner>\n                <div className=\"spinner\">\n\n                </div>\n            </InBlockSpinner>\n        );\n    } else {\n        console.log(props.clients);\n        return(\n            <UsersBlockContent>            \n                <TotalUsersPie totalClients={props.clients.length} />\n                <PieChartClass data={[ { name: 'Active Users', value: props.clients.length}, { name: 'Unactive Users', value: 45 } ]}/>\n                {/* <CircleData percentage={100} title=\"Total Users\" label=\"100\" circleColor={theme.colors.primary} />\n                <CircleData percentage={47} title=\"Active Users\" label=\"47\" circleColor={theme.colors.green} /> */}\n            </UsersBlockContent>\n        );\n    }\n}\n\nexport default DashboardUsers;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/revenueBlock/DashboardRevenue.tsx",["777","778","779","780","781","782","783","784","785","786"],"import React, { useEffect, useState } from 'react';\nimport FlexBox from '../../../../../elements/desktop/commonElements/FlexBox';\nimport NewUsersBlockContainer from '../../../../../elements/desktop/dashboardElements/NewUsersBlock/NewUsersBlockContainer';\nimport Text from '../../../../../elements/desktop/commonElements/Text';\nimport { theme } from '../../../../../theme';\nimport { Sale } from '../../../../../../../interfaces/Interfaces';\nimport { sortArrayToday, sortArrayWeek, sortArrayMonth } from '../../../../../utils/DateSortHelpers';\nimport InBlockSpinner from '../../../../../elements/desktop/InBlockSpinner';\nimport RevenueChart from './RevenueChart';\n\nconst DATE_ARRAY = [0, 7, 30, 6, 1];\n\nconst REVENUE_TEXT_THEME = {\n    fontSize: '3em',\n    alignItems: theme.alignItems.flexStart\n}\n\nconst COMPARE_REVENUE_TEXT_THEME = {\n    alignItems: theme.alignItems.center,\n}\n\nconst FLEXBOX_THEME = {\n    flexDirection: theme.flexDirection.column,\n    alignItems: theme.alignItems.center,\n    justifyContent: theme.justifyContent.flexStart\n}\n\ninterface Props {\n    isTrainerSalesLoading?: boolean,\n    sales: Sale[],\n    timePeriod: string,\n}\n\nconst countTotalRevenue = (sales: Sale[]) => {\n    let totalRevenue = 0;\n    console.log(sales);\n    sales.map((sale) => {\n        return totalRevenue += sale.price;\n    });\n    console.log('revenue', totalRevenue)\n    return totalRevenue;\n}\n\nconst countRevenueDifference = (sales: Sale[], totalRevenue: number, setRevenueDifference: React.Dispatch<React.SetStateAction<number>>) => {\n    let revenueDifference = 0;\n\n    setRevenueDifference(revenueDifference);\n}\n\nconst renderWeekRevenue = (sales: Sale[]) => {\n    const sortedArray = sortArrayWeek(sales);\n    const isPositive = true;\n    return(\n        <NewUsersBlockContainer style={{ display: 'grid', gridTemplateColumns: '1fr 2fr'}}>\n            <FlexBox theme={FLEXBOX_THEME}>\n                <Text theme={REVENUE_TEXT_THEME}>\n                    {countTotalRevenue(sortedArray)}$\n                </Text>\n                <Text theme={COMPARE_REVENUE_TEXT_THEME}>\n                    <i style={{ color: isPositive ? '#88B360' : '#D60D04', fontSize: '1em' }} className={ isPositive ? \"fas fa-arrow-up\" : \"fas fa-arrow-down\" }></i> <div style={{ color: '#88B360', fontSize: '1.5em', marginLeft: '0.2em' }}></div>\n                </Text>\n            </FlexBox>\n            <FlexBox>\n                <RevenueChart last=\"Last Week\" present=\"This Week\" lastRevenue={30} presentRevenue={countTotalRevenue(sortedArray)} />\n            </FlexBox>\n        </NewUsersBlockContainer>\n    );\n}\n\nconst renderMonthRevenue = (sales: Sale[]) => {\n    const sortedArray = sortArrayMonth(sales);\n    const isPositive = true;\n\n    return(\n        <NewUsersBlockContainer style={{ display: 'grid', gridTemplateColumns: '1fr 2fr'}}>\n            <FlexBox theme={FLEXBOX_THEME}>\n                <Text theme={REVENUE_TEXT_THEME}>\n                    {countTotalRevenue(sortedArray)}$\n                </Text>\n                <Text theme={COMPARE_REVENUE_TEXT_THEME}>\n                    <i style={{ color: isPositive ? '#88B360' : '#D60D04', fontSize: '1em' }} className={ isPositive ? \"fas fa-arrow-up\" : \"fas fa-arrow-down\" }></i> <div style={{ color: '#88B360', fontSize: '1.5em', marginLeft: '0.2em' }}></div>\n                </Text>\n            </FlexBox>\n            <FlexBox>\n                <RevenueChart last=\"Last Month\" present=\"This Month\" lastRevenue={150} presentRevenue={countTotalRevenue(sortedArray)} />\n            </FlexBox>\n        </NewUsersBlockContainer>\n    );\n}\n\n\nconst DashboardRevenue: React.FC<Props> = (props) => {\n\n    const [isPositive, setIsPositive] = useState(false);\n    const [revenueDifference, setRevenueDifference] = useState(0);\n    const [sortedSales, setSortedSales] = useState([]);\n\n    if (props.isTrainerSalesLoading){\n        return(\n            <InBlockSpinner>\n                <div className=\"spinner\">\n                    \n                </div>\n            </InBlockSpinner>\n        );\n    } else {\n        switch(props.timePeriod){\n            default:\n                return renderWeekRevenue(props.sales);\n            case \"M\":\n                return renderMonthRevenue(props.sales);\n        }\n    }\n}\n\nexport default DashboardRevenue;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/coursePerformanceBlock/CoursePerformance.tsx",["787","788","789","790"],"import React from \"react\";\nimport { Course } from \"../../../../../../../interfaces/courseInterfaces/Course\";\nimport { Sale } from \"../../../../../../../interfaces/Interfaces\";\nimport FlexBox from \"../../../../../elements/desktop/commonElements/FlexBox\";\nimport ChartOptions from \"../../../../../elements/desktop/dashboardElements/CourseAnalize/ChartOptions\";\nimport ChartOptionTab from \"../../../../../elements/desktop/dashboardElements/CourseAnalize/ChartOptionTab\";\nimport ChartsContainer from \"../../../../../elements/desktop/dashboardElements/CourseAnalize/ChartsContainer\";\nimport CourseListElement from \"../../../../../elements/desktop/dashboardElements/CourseAnalize/CourseListElement\";\nimport CoursePerformanceContainer from \"../../../../../elements/desktop/dashboardElements/CourseAnalize/CoursePerformanceContainer\";\nimport LeftSide from \"../../../../../elements/desktop/dashboardElements/CourseAnalize/LeftSide\";\nimport LeftSideContent from \"../../../../../elements/desktop/dashboardElements/CourseAnalize/LeftSideContent\";\nimport LeftSideTitle from \"../../../../../elements/desktop/dashboardElements/CourseAnalize/LeftSideTitle\";\nimport RightSide from \"../../../../../elements/desktop/dashboardElements/CourseAnalize/RightSide\";\nimport RightSideContent from \"../../../../../elements/desktop/dashboardElements/CourseAnalize/RightSideContent\";\nimport RightSideTitle from \"../../../../../elements/desktop/dashboardElements/CourseAnalize/RightSideTitle\";\nimport InBlockSpinner from \"../../../../../elements/desktop/InBlockSpinner\";\nimport { theme } from \"../../../../../theme\";\nimport CoursePerformanceMonthly from \"./CoursePerformanceMonthly\";\nimport CoursePerformanceWeekly from \"./CoursePerformanceWeekly\";\n\nconst renderCoursePerformanceChart = (sales: Sale[] | {}, selectedCourse: Course | {}, performanceTimePeriod: string) => {\n    switch(performanceTimePeriod){\n        default: \n            return <CoursePerformanceWeekly sales={sales} course={selectedCourse} timePeriod={performanceTimePeriod}/>\n        case \"M\":\n            return <CoursePerformanceMonthly sales={sales} course={selectedCourse} timePeriod={performanceTimePeriod}/>\n        case \"Y\":\n            return <CoursePerformanceWeekly sales={sales} course={selectedCourse} timePeriod={performanceTimePeriod}/>\n    }\n}\n\nconst sortSales = (sales: Sale[], courseId: string, setSortedSales: React.Dispatch<React.SetStateAction<Sale[]>>) => {\n    console.log(courseId, sales);\n    const sortedSales = sales.filter((sale) => {\n        if (sale.courseId === courseId) {\n            console.log(sale);\n            return sale;\n        }\n    }).sort((a, b) => {\n        return a.date.getDate() - b.date.getDate();\n    })\n    console.log(sortedSales);\n    setSortedSales(sortedSales);\n}\n\ninterface Props {\n    isTrainerCoursesLoading?: boolean,\n    isTrainerSalesLoading?: boolean,\n    courses: Course[],\n    trainerId: string,\n    sales: Sale[]\n}\n\nconst CoursePerformance: React.FC<Props> = (props) => {\n\n    const [selectedCourse, setSelectedCourse] = React.useState({ _id: ''});\n    const [selectedOption, setSelectedOption] = React.useState(0);\n    const [performanceTimePeriod, setPerformanceTimePeriod] = React.useState(\"W\");\n    const [sortedSales, setSortedSales] = React.useState({});\n\n    console.log(sortedSales);\n\n    if (props.isTrainerSalesLoading || props.isTrainerCoursesLoading){\n        return(\n            <CoursePerformanceContainer>\n                <LeftSide >\n                    <LeftSideTitle>\n                        Courses\n                    </LeftSideTitle>\n                    <LeftSideContent className=\"hideScrollbar\" style={{ padding: '1em' }}>\n                        <InBlockSpinner>\n                            <div className=\"spinner\">\n\n                            </div>\n                        </InBlockSpinner>\n                    </LeftSideContent>\n                </LeftSide>\n                <RightSide>\n                    <RightSideTitle>\n                        <FlexBox>\n                            Performance\n                        </FlexBox>\n                        <FlexBox>\n                            Week\n                        </FlexBox>\n                    </RightSideTitle>\n                    <RightSideContent>\n                        <InBlockSpinner>\n                            <div className=\"spinner\">\n\n                            </div>\n                        </InBlockSpinner>\n                    </RightSideContent>\n                </RightSide>\n            </CoursePerformanceContainer>\n        );\n    } else {\n        return (\n            <CoursePerformanceContainer>\n                <LeftSide >\n                    <LeftSideTitle>\n                        Courses\n                    </LeftSideTitle>\n                    <LeftSideContent className=\"hideScrollbar\">\n                        {props.courses.map((course, i) => {\n                            return(\n                                <CourseListElement key={i} style={{ backgroundColor: selectedCourse === course ? theme.colors.mainLightBlue : theme.colors.white }} onClick={() => { setSelectedCourse(course); sortSales(props.sales, course._id, setSortedSales)} }>\n                                    <FlexBox>\n                                        {course.title}\n                                    </FlexBox>\n                                    <FlexBox>\n                                        Mar 29\n                                    </FlexBox>\n                                </CourseListElement>\n                            );\n                        })}\n                    </LeftSideContent>\n                </LeftSide>\n                <RightSide>\n                    <RightSideTitle>\n                        <FlexBox>\n                            Performance\n                        </FlexBox>\n                        <FlexBox>\n                            <select onChange={(e) => { setPerformanceTimePeriod(e.target.value)}} style={{ outline: 'none', border: 'none' }}>\n                                <option value=\"W\" style={{ outline: 'none', border: 'none'}}>\n                                    Week\n                                </option>\n                                <option value=\"M\" style={{ outline: 'none', border: 'none'}}>\n                                    Month\n                                </option>\n                                {/* <option value=\"Y\" style={{ outline: 'none', border: 'none'}}>\n                                    Year\n                                </option> */}\n                            </select>\n                        </FlexBox>\n                    </RightSideTitle>\n                    <RightSideContent>\n                        <ChartOptions>\n                            {/* <ChartOptionTab theme={{ borderBottom: selectedOption === 0 ? `1px solid ${theme.colors.mainBlue}` : '' }} onClick={() => setSelectedOption(0)}>\n                                Active Users\n                            </ChartOptionTab>\n                            <ChartOptionTab theme={{ borderBottom: selectedOption === 1 ? `1px solid ${theme.colors.mainBlue}` : '' }} onClick={() => setSelectedOption(1)}>\n                                Revenue\n                            </ChartOptionTab> */}\n                        </ChartOptions>\n                        <ChartsContainer>\n                            {renderCoursePerformanceChart(sortedSales, selectedCourse, performanceTimePeriod)}\n                        </ChartsContainer>\n                    </RightSideContent>\n                </RightSide>\n            </CoursePerformanceContainer>\n        );\n    }\n}\n\nexport default CoursePerformance;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/usersBlock/PieChartClass.jsx",["791"],"import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector } from 'recharts';\nimport { theme } from '../../../../../theme';\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload, percent, value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={-2} textAnchor=\"middle\" fill={\"rgb(0,0,0)\"}>{payload.name}</text>\n      <text x={cx} y={cy} dy={25} textAnchor=\"middle\" fontSize='20px' fill={\"rgb(0,0,0)\"}>{`${(percent * 100).toFixed(2)}%`}</text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={theme.colors.mainPink}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={theme.colors.mainPink}\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke=\"#505050\" fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill=\"#505050\" stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} fontSize=\"20px\" textAnchor={textAnchor} fill=\"#000000\">{`${value}`}</text>\n      {/* <text x={ex + (cos >= 0 ? 1 : -1) * -50} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      </text> */}\n    </g>\n  );\n};\n\nexport default class PieChartClass extends PureComponent {\n\n  state = {\n    activeIndex: 0,\n  };\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    return (\n        <PieChart width={200} height={220}>\n            <Pie\n            activeIndex={this.state.activeIndex}\n            activeShape={renderActiveShape}\n            data={[\n              { name: 'Active Users', value: 1 },\n              { name: 'Unactive Users', value: 0 },\n            ]}\n            cx={100}\n            cy={110}\n            innerRadius={55}\n            outerRadius={70}\n            fill={theme.colors.mainPurple}\n            dataKey=\"value\"\n            onMouseOver={this.onPieEnter}\n            />\n        </PieChart>\n    );\n  }\n}\n",["792","793"],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/revenueBlock/RevenueChart.jsx",["794","795","796"],"import React, { Component, useEffect } from 'react';\nimport Chart from 'chart.js';\nimport FlexBox from '../../../../../elements/desktop/commonElements/FlexBox';\nimport { theme } from '../../../../../theme';\n\nconst CHART_THEME = {\n    justifyContent: theme.justifyContent.center,\n    alignItems: theme.alignItems.center\n}\n\n// class RevenueChart extends Component { \n\n//     CHART_THEME = {\n//         justifyContent: theme.justifyContent.center\n//     }\n\n//     chartRef = React.createRef();\n\n//     // componentDidMount() {\n//     //     const myChartRef = this.chartRef.current.getContext(\"2d\");\n//     //     new Chart(myChartRef, {\n//     //         type: \"line\",\n//     //         data: {\n//     //             //Bring in data\n//     //             labels: [\"Jan\", \"Feb\", \"March\", \"April\", 'May', 'June', 'July'],\n//     //             datasets: [\n//     //                 {\n//     //                     label: '',\n//     //                     data: [0, 30, 54, 90, 100, 150, 170],\n//     //                     backgroundColor: [\n//     //                         'rgba(15, 68, 148, 0.1)',\n//     //                     ],\n//     //                     borderColor: [\n//     //                         'rgba(0, 28, 155, 0.8)'\n//     //                     ],\n//     //                     borderWidth: '1',\n//     //                 }\n//     //             ]\n//     //         },\n//     //         options: {\n//     //             //Customize chart options\n//     //         }\n//     //     });\n//     // }\n\n//     // render(){\n//     //     return(\n//     //         <FlexBox theme={this.CHART_THEME} style={{ width: '95%'}}>\n//     //             <canvas\n//     //                 id=\"myChart\"\n//     //                 ref={this.chartRef}\n//     //                 width=\"100%\"\n//     //                 height=\"50em\"\n//     //             />\n//     //         </FlexBox>\n//     //     );\n//     // };\n//     componentDidMount(){\n//         console.log(this.props)\n//         const myChartRef = this.chartRef.current.getContext(\"2d\");\n//         new Chart(myChartRef, {\n//             type: \"bar\",\n//             data: {\n//                 //Bring in data\n//                 labels: [this.props.last, this.props.present],\n//                 datasets: [\n//                     {\n//                         label: this.props.last,\n//                         data: [this.props.lastRevenue],\n//                         backgroundColor: [\n//                             //'rgba(138, 74, 255, 1)',\n//                             //'rgba(138, 74, 255, 1)',\n//                             //'rgb(0,122,225,1)',\n//                             //'rgb(0,122,225,1)',\n//                             'rgb(112, 138, 255, 0.8)',\n//                             'rgb(112, 138, 255, 0.8)'\n\n//                         ],\n//                         borderWidth: '1',\n//                     },\n//                     {\n//                         label: this.props.present,\n//                         data: [0, this.props.presentRevenue],\n//                         backgroundColor: [\n//                             //'rgba(187, 255, 125, 1)',\n//                             //'rgba(187, 255, 125, 1)',\n//                             //'rgb(0,122,225,1)',\n//                             //'rgb(28,168,221, 1)',\n//                             //'rgb(28,168,221, 1)',\n//                             //'rgba(138, 74, 255, 1)',\n//                             //'rgba(138, 74, 255, 1)',\n//                             'rgb(124, 80, 204, 0.8)',\n//                             'rgb(124, 80, 204, 0.8)',\n\n//                         ],\n//                         borderWidth: '1',\n//                     }\n//                 ]\n//             },\n//             options: {\n//                 scales: {\n//                     xAxes: [{\n//                         stacked: true\n//                     }],\n//                     yAxes: [{\n//                         stacked: true\n//                     }]\n//                 }\n//             }\n//         });\n//     }\n//     render(){\n//         return(\n            \n//             <FlexBox theme={this.CHART_THEME} style={{ width: '100%'}}>\n//                 <canvas\n//                     id=\"myChart\"\n//                     ref={this.chartRef}\n//                     width=\"100%\"\n//                     height=\"80em\"\n//                 />\n//             </FlexBox>\n//         );\n//     };\n// }\n\n// export default RevenueChart;\n\nconst RevenueChart = (props) => {\n\n    //BAR CHART\n    // const chartConfig = {\n    //     type: 'bar',\n    //     data:  {\n    //         labels: [props.last, props.present],\n    //         datasets: [{\n    //             label: \"\",\n    //             backgroundColor: 'rgb(255, 99, 132)',\n    //             borderColor: 'rgb(255, 99, 132)',\n    //             data: [props.lastRevenue, props.presentRevenue]\n    //         }]\n    //     },\n    //     options: {\n    //         legend: {\n    //             display: false\n    //         },\n    //         scales: {\n    //             yAxes: [{\n    //                 ticks: {\n    //                     beginAtZero: true,\n    //                     display: false\n    //                 },\n    //                 gridLines: {\n    //                     display: false,\n    //                     drawBorder: false\n    //                 },\n    //                 display: false\n    //             }],\n    //             xAxes: [{\n    //                 gridLines: {\n    //                     display: false\n    //                 }\n    //             }]\n    //         },\n    //         animation: {\n    //             duration: 500\n    //         }\n    //     }\n    //   };\n\n    var chartConfig = {\n        type: 'line',\n        data: {\n            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', \"Sat\", \"Sun\"],\n            datasets: [{\n                label: \"\",\n                backgroundColor: 'rgb(255, 255, 255)',\n                borderColor: 'rgb(255, 99, 132)',\n                data: [0, 3, 5, 9, 24, 24, 30]\n            }]\n        },\n        options: {\n            legend: {\n                display: false\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        display: false,\n                    },\n                    gridLines: {\n                        display: false,\n                        drawBorder: false\n                    },\n                    display: false\n                }],\n                xAxes: [{\n                    gridLines: {\n                        display: false\n                    }\n                }]\n            },\n            animation: {\n                duration: 500\n            }\n        }\n    };\n    \n\n\n\n    const chartContainer = React.useRef(null);\n    const [chartInstance, setChartInstance] = React.useState(null);\n  \n    useEffect(() => {\n      if (chartContainer && chartContainer.current) {\n        const newChartInstance = new Chart(chartContainer.current, chartConfig);\n        setChartInstance(newChartInstance);\n      }\n    }, [chartContainer]);\n  \n    return (\n        <FlexBox style={{ padding: '1em' }} theme={CHART_THEME}>\n            <canvas style={{ width: '100%', height: '100%', padding: '0.5em' }} ref={chartContainer} />\n        </FlexBox>\n    );\n  };\n \nexport default RevenueChart;    ","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/usersBlock/TotalUsersPieChart.jsx",["797","798"],"import { PureComponent } from 'react';\nimport { PieChart, Pie, Sector } from 'recharts';\nimport { theme } from '../../../../../theme';\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload, value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={-2} textAnchor=\"middle\" fill={\"rgb(0,0,0)\"}>{payload.name}</text>\n      <text x={cx} y={cy} dy={25} textAnchor=\"middle\" fontSize='20px' fill={\"rgb(0,0,0)\"}>{payload.value}</text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`${value}`}</text>\n      {/* <text x={ex + (cos >= 0 ? 1 : -1) * -50} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      </text> */}\n    </g>\n  );\n};\n\nexport default class TotalUsersPie extends PureComponent {  \n  state = {\n    activeIndex: 0,\n  };\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    console.log(this.props);\n    return (\n        <PieChart width={200} height={220}>\n            <Pie\n            activeIndex={this.state.activeIndex}\n            activeShape={renderActiveShape}\n            data={[\n              { name: 'Total Users', value: this.props.totalClients },\n            ]}\n            cx={100}\n            cy={110}\n            innerRadius={55}\n            outerRadius={70}\n            fill={theme.colors.mainPurple}\n            dataKey=\"value\"\n            labelLine={false}\n            onMouseOver={this.onPieEnter}\n            />\n        </PieChart>\n    );\n  }\n}\n","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/CourseListElement.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/CourseAnalize/ChartOptionTab.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/dashboardElements/SalesBlock/SalesContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/coursePerformanceBlock/CoursePerformanceChart.jsx",["799","800","801","802","803"],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/coursePerformanceBlock/CoursePerformanceWeekly.jsx",["804","805","806"],"import React, { Component, useEffect } from 'react';\nimport Chart from 'chart.js';\nimport FlexBox from '../../../../../elements/desktop/commonElements/FlexBox';\nimport { theme } from '../../../../../theme';\nimport { renderWeekdaySalesRevenue } from '../../../../../utils/DateSortHelpers';\n\nconst CHART_THEME = {\n    justifyContent: theme.justifyContent.center,\n    alignItems: theme.alignItems.center\n}\n\nconst renderTimeFrame = () => {\n    const WEEKDAYS = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n    const currentDate = new Date();\n    const priorDate = new Date();\n    let weekTimeFrame = [];\n    for (let i = 6; i >= 0; i--){\n        priorDate.setDate(currentDate.getDate() - i);\n        weekTimeFrame.push(WEEKDAYS[priorDate.getDay()]);\n    }\n    return weekTimeFrame;\n}\n\nconst CoursePerformanceChartWeekly = (props) => {\n\n    const chartContainer = React.useRef(null);\n    const [chartInstance, setChartInstance] = React.useState(null);\n  \n    useEffect(() => {\n      if (chartContainer && chartContainer.current) {\n        const newChartInstance = new Chart(chartContainer.current, chartConfig);\n        setChartInstance(newChartInstance);\n      }\n    }, [props.course, props.timePeriod]);\n    \n    if(props.course.id){\n        console.log('rendering Weekly Chart', props.sales);\n        renderWeekdaySalesRevenue(props.sales);\n        var chartConfig = {\n            type: 'line',\n            data: {\n                labels: renderTimeFrame(),\n                datasets: [{\n                    label: \"\",\n                    backgroundColor: 'rgb(253, 138, 163, 0.5)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    data: renderWeekdaySalesRevenue(props.sales)\n                }]\n            },\n            options: {\n                legend: {\n                    display: false\n                },\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: false,\n                            display: true,\n                        },\n                        gridLines: {\n                            display: false,\n                            drawBorder: false\n                        },\n                        display: false,\n                        position: 'left'\n                    }],\n                    xAxes: [{\n                        gridLines: {\n                            display: false\n                        }\n                    }]\n                },\n                animation: {\n                    duration: 500\n                }\n            }\n        };\n\n        return (\n            <FlexBox style={{ padding: '1em', width: '50em', height: '25em' }} theme={CHART_THEME}>\n                <canvas style={{ width: '100%', height: '100%' }} ref={chartContainer} />\n            </FlexBox>\n        );\n    } else {\n        return(\n            <FlexBox style={{ padding: '1em' }} theme={CHART_THEME}>\n                Select the course from the list\n            </FlexBox>\n        );\n    }\n  };\n \nexport default CoursePerformanceChartWeekly;   ","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/dashboard/coursePerformanceBlock/CoursePerformanceMonthly.jsx",["807","808","809","810","811"],"import React, { Component, useEffect } from 'react';\nimport Chart from 'chart.js';\nimport FlexBox from '../../../../../elements/desktop/commonElements/FlexBox';\nimport { theme } from '../../../../../theme';\nimport Chartjs from 'chart.js';\nimport { renderWeekdaySalesRevenue, renderMonthlySalesRevenue } from '../../../../../utils/DateSortHelpers';\n\nconst CHART_THEME = {\n    justifyContent: theme.justifyContent.center,\n    alignItems: theme.alignItems.center\n}\n\nconst renderTimeFrame = () => {\n    const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const currentDate = new Date();\n    const priorDate = new Date();\n    let monthTimeFrame = [];\n    for (let i = 10; i >= 0; i--){\n        priorDate.setMonth(currentDate.getMonth() - i);\n        monthTimeFrame.push(MONTHS[priorDate.getMonth()]);\n    }\n    return monthTimeFrame;\n}\n\nconst renderTimeFrameValue = (timePeriod) => {\n    switch(timePeriod){\n        default: \n            return [20, 27, 30, 35, 35, 40, 50];\n        case 'M':\n            return [100, 150, 175, 250, 300, 320, 400, 450, 500, 670, 850, 1000, 1100];\n        case 'Y':\n            return [1000, 4500, 7000];\n    }\n}\n\nconst CoursePerformanceChartMonthly = (props) => {\n\n    const chartContainer = React.useRef(null);\n    const [chartInstance, setChartInstance] = React.useState(null);\n  \n    useEffect(() => {\n      if (chartContainer && chartContainer.current) {\n        const newChartInstance = new Chart(chartContainer.current, chartConfig);\n        setChartInstance(newChartInstance);\n      }\n    }, [props.course, props.timePeriod]);\n    \n    if(props.course.id){\n        console.log('rendering Weekly Chart', props.sales);\n        renderWeekdaySalesRevenue(props.sales);\n        var chartConfig = {\n            type: 'line',\n            data: {\n                labels: renderTimeFrame(),\n                datasets: [{\n                    label: \"\",\n                    backgroundColor: 'rgb(253, 138, 163, 0.5)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    data: renderMonthlySalesRevenue(props.sales)\n                }]\n            },\n            options: {\n                legend: {\n                    display: false\n                },\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true,\n                            display: true,\n                        },\n                        gridLines: {\n                            display: false,\n                            drawBorder: false\n                        },\n                        display: false,\n                        position: 'left'\n                    }],\n                    xAxes: [{\n                        gridLines: {\n                            display: false\n                        }\n                    }]\n                },\n                animation: {\n                    duration: 500\n                }\n            }\n        };\n\n        return (\n            <FlexBox style={{ padding: '1em', width: '50em', height: '25em' }} theme={CHART_THEME}>\n                <canvas style={{ width: '100%', height: '100%' }} ref={chartContainer} />\n            </FlexBox>\n        );\n    } else {\n        return(\n            <FlexBox style={{ padding: '1em' }} theme={CHART_THEME}>\n                Select the course from the list\n            </FlexBox>\n        );\n    }\n  };\n \nexport default CoursePerformanceChartMonthly;   ","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/utils/iCoachAPI.ts",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/ClientRegistrationPage.tsx",["812"],"import { defaultProps } from '@nivo/pie';\nimport React from 'react';\nimport FlexBox from '../../elements/desktop/commonElements/FlexBox';\nimport FormField from '../../elements/desktop/commonElements/FormField';\nimport FormFieldset from '../../elements/desktop/commonElements/FormFieldset';\nimport GridBox from '../../elements/desktop/commonElements/GridBox';\nimport PrimaryButton from '../../elements/desktop/commonElements/PrimaryButton';\nimport RegistrationPageContainer from '../../elements/desktop/registrationElements/RegistrationPageContainer';\nimport RegistrationPageGridRow from '../../elements/desktop/registrationElements/RegistrationPageGridRow';\nimport { theme } from '../../theme';\n\nconst TWO_COLUMNS_FIELDSET_STYLE = {\n    width: \"15em\"\n}\n\nconst BLOCK_TITLE_THEME = {\n    justifyContent: theme.justifyContent.center,\n    alignItems: theme.alignItems.center,\n    fontSize: '1.2em',\n    margin: '1em 0 0.5em 0'\n}\n\ninterface Props {\n    match: any\n}\n\nconst ClientRegistrationPage: React.FC<Props> = (props) => {\n    console.log(props);\n    return(\n        <RegistrationPageContainer>\n            <RegistrationPageGridRow style={{ width: '40em', flexDirection: 'column', borderBottom: `1px solid ${theme.colors.mainBlue}`}}>\n                <FlexBox style={{ marginTop: '1em', fontSize: '2em', color: theme.colors.mainBlue }}>\n                    Welcome to iCoach\n                </FlexBox>\n                <FlexBox style={{ marginTop: '1em', marginBottom: '1em'}}>\n                    To access your courses finish the registration\n                </FlexBox>\n            </RegistrationPageGridRow>\n            <RegistrationPageGridRow style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\n                <FlexBox theme={BLOCK_TITLE_THEME}>\n                    Personal Information\n                </FlexBox>\n                <GridBox theme={{ gridTemplateColumns: '1fr 1fr 1fr', gridGap: '1em'  }}>\n                    <FormFieldset>\n                        <legend>\n                            First Name\n                        </legend>\n                        <FormField />\n                    </FormFieldset>\n                    <FormFieldset>\n                        <legend>\n                            Last Name\n                        </legend>\n                        <FormField />\n                    </FormFieldset>\n                    <FormFieldset>\n                        <legend>\n                            Date of Birth\n                        </legend>\n                        <FormField />\n                    </FormFieldset>\n                </GridBox>\n                <FlexBox theme={BLOCK_TITLE_THEME}>\n                    Contact Information\n                </FlexBox>\n                <GridBox theme={{ gridTemplateColumns: '1fr 1fr', gridGap: '1em'}}>\n                    <FormFieldset style={TWO_COLUMNS_FIELDSET_STYLE}>\n                        <legend>\n                            Phone\n                        </legend>\n                        <FormField />\n                    </FormFieldset>\n                    <FormFieldset style={TWO_COLUMNS_FIELDSET_STYLE}>\n                        <legend>\n                            Email\n                        </legend>\n                        <FormField />\n                    </FormFieldset>\n                </GridBox>\n                <GridBox theme={{ gridTemplateColumns: '1fr 1fr 1fr', gridGap: '1em', width: '100%'  }}>\n                    <FormFieldset>\n                        <legend>\n                            Country\n                        </legend>\n                        <FormField />\n                    </FormFieldset>\n                    <FormFieldset>\n                        <legend>\n                            State\n                        </legend>\n                        <FormField />\n                    </FormFieldset>\n                    <FormFieldset>\n                        <legend>\n                            City\n                        </legend>\n                        <FormField />\n                    </FormFieldset>\n                </GridBox>\n                <FlexBox theme={BLOCK_TITLE_THEME}>\n                    Security Information\n                </FlexBox>\n                <GridBox theme={{ gridTemplateColumns: '1fr 1fr', gridGap: '1em', width: '100%'  }}>\n                    <FormFieldset  style={TWO_COLUMNS_FIELDSET_STYLE}>\n                        <legend>\n                            Password\n                        </legend>\n                        <FormField type=\"password\" />\n                    </FormFieldset>\n                    <FormFieldset  style={TWO_COLUMNS_FIELDSET_STYLE}>\n                        <legend>\n                            Confirm Password\n                        </legend>\n                        <FormField type='password' />\n                    </FormFieldset>\n                </GridBox>\n            </RegistrationPageGridRow>\n            <RegistrationPageGridRow>\n                <PrimaryButton>\n                    Register\n                </PrimaryButton>\n            </RegistrationPageGridRow>\n        </RegistrationPageContainer>\n    );\n}\n\nexport default ClientRegistrationPage;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/users/AddNewUserModal.tsx",["813"],"import React from 'react';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport PrimaryButton from '../../../../elements/desktop/commonElements/PrimaryButton';\nimport SettingsIcon from '../../../../elements/desktop/dashboardElements/SettingsIcon';\nimport AddNewUserModalContainer from '../../../../elements/desktop/usersElements/AddNewUserModalContainer';\nimport CloseModalButton from '../../../../elements/desktop/usersElements/CloseModalButton';\nimport history from '../../../../history';\nimport { theme } from '../../../../theme';\n\nconst INPUT_STYLE = {\n    width: '32em',\n    height: '2em',\n    marginRight: '2em'\n}\n\nconst SEND_INVITATION_BUTTON = {\n    backgroundColor: 'white'\n}\n\ninterface Props {\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>,\n    trainerId: string,\n}\n\nconst AddNewUserModal: React.FC<Props> = (props) => {\n    return(\n        <div style={{ position: 'absolute', left: '0', top: '0', width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <AddNewUserModalContainer>\n                <FlexBox style={{ paddingTop: '0.8em', justifyContent: 'space-between', height: '2em', width: '40em', borderBottom: `1px solid ${theme.colors.mainBlue}`, color: theme.colors.black }}>\n                    <FlexBox style={{ paddingLeft: '1em' }}>\n            \n                    </FlexBox>\n                    <FlexBox style={{ fontSize: '1.2em' }}>\n                        Add New User\n                    </FlexBox>\n                    <FlexBox style={{ paddingRight: '1em', fontSize: '1.2em' }}>\n                        <CloseModalButton onClick={() => props.closeModal(false)}>\n                            X\n                        </CloseModalButton>\n                    </FlexBox>\n                </FlexBox>\n                <FlexBox style={{ alignItems: 'center' }}>\n                    <FlexBox style={{ justifyContent: 'center', width: '100%'}}>\n                        Email\n                    </FlexBox>\n                    <FlexBox>\n                        <input style={INPUT_STYLE} />\n                    </FlexBox>\n                </FlexBox>\n                <FlexBox style={{ alignItems: 'center' }}>\n                    <FlexBox style={{ justifyContent: 'center', width: '100%'}}>\n                        Assign course\n                    </FlexBox>\n                    <FlexBox>\n                        <select style={INPUT_STYLE}>\n                            <option>\n                                Do not assign a course\n                            </option>\n                            <option>\n                                Course 1\n                            </option>   \n                            <option>\n                                Course 2\n                            </option> \n                        </select>                    \n                    </FlexBox>\n                </FlexBox>\n                <FlexBox style={{ justifyContent: 'center', alignItems: 'center'}}>\n                    <PrimaryButton theme={SEND_INVITATION_BUTTON} onClick={() => history.push(`/registerNewUser/${props.trainerId}`)}>\n                        Send invitation\n                    </PrimaryButton>\n                </FlexBox>\n            </AddNewUserModalContainer>\n        </div>\n    );\n}\n\nexport default AddNewUserModal;","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/AddNewUserModalContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/usersElements/CloseModalButton.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/registrationElements/RegistrationPageContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/registrationElements/RegistrationPageGridRow.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/FormField.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/commonElements/FormFieldset.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/programs/CreateNewCourseModal.tsx",[],["814","815"],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/programsElements/CreateNewCourseModalContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/AuthPage.tsx",["816","817"],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/authElements/AuthPageContainer.tsx",["818"],"import styled, { keyframes } from 'styled-components';\n\nexport default styled.div`\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    position: absolute;\n    animation: gradient 30s ease infinite;\n    background: linear-gradient(-45deg, #ee7752, #23a6d5);\n    justify-content: center;\n    align-items: center;\n\n    @keyframes gradient {\n        0%{\n            background-position: 0 50%;\n        }\n        50%{\n            background-position: 100% 50%;\n        }\n        100%{\n            background-position: 0 50%;\n        }\n    }\n`","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/authElements/AuthFormContainer.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/authElements/RightSide.tsx",["819"],"import styled from 'styled-components';\nimport { theme } from '../../../theme';\n\nexport default styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background: transparent;\n    transition: 0.2s ease;\n    padding: 3em;\n    :hover {\n        background: rgb(0, 0, 0, 0.5);\n        width: 250%;\n    }\n`","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/authElements/LeftSide.tsx",["820"],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/headerElements/AuthButton.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/elements/desktop/authElements/AuthButton.tsx",[],"/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/modules/desktop/trainerView/course/NewCourse.tsx",["821"],"import React, { useState } from 'react';\nimport FlexBox from '../../../../elements/desktop/commonElements/FlexBox';\nimport GridBox from '../../../../elements/desktop/commonElements/GridBox';\nimport PrimaryButton from '../../../../elements/desktop/commonElements/PrimaryButton';\nimport SettingsBlock from '../../../../elements/desktop/settingsElements/SettingsBlock';\nimport SettingsBlockTitle from '../../../../elements/desktop/settingsElements/SettingsBlockTitle';\nimport SettingsContainer from '../../../../elements/desktop/settingsElements/SettingsContainer';\nimport SettingsInput from '../../../../elements/desktop/settingsElements/SettingsInput';\nimport { theme } from '../../../../theme';\nimport '../../../../css/main.css';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { createNewCourseRequest } from '../../../../actions/trainerActions';\nimport { NewCourse } from '../../../../../../interfaces/courseInterfaces/NewCourse';\n\nconst SETTINGS_CONTAINER_THEME = {\n    justifyContent: theme.justifyContent.flexEnd,\n    alignItems: theme.alignItems.center,\n    flexDirection: theme.flexDirection.column\n}\nconst DETAILS_BLOCK_THEME = {\n    justifyContent: theme.justifyContent.center,\n    alignItems: theme.alignItems.center,\n    flexDirection: theme.flexDirection.column,\n    margin: '1em 0 1em 0'\n}\nconst CENTER_THEME = {\n    alignItems: theme.alignItems.center,\n    justifyContent: theme.justifyContent.center\n}\nconst SAVE_BUTTON_THEME = {\n    color: theme.colors.white,\n    backgroundColor: 'green',\n    hoverBackgroundColor: theme.colors.white,\n    hoverColor: 'green'\n}\nconst COURSE_SETTINGS_BLOCK_THEME = {\n    gridTemplateColumns: '1fr 1fr'\n}\nconst COURSE_SETTINGS_BLOCK_LEFT_COLUMN_THEME = {\n    justifyContent: theme.justifyContent.flexEnd,\n    margin: '1em'\n}\nconst COURSE_SETTINGS_BLOCK_RIGHT_COLUMN_THEME = {\n    justifyContent: theme.justifyContent.flexStart,\n    margin: '1em',\n    flexDirection: theme.flexDirection.column\n}\n\ninterface OwnProps {\n    trainerId: string,\n    location: any\n}\n\ntype Props = OwnProps & MapDispatchToProps;\n\nconst NewCourseModule: React.FC<Props> = (props) => {\n\n    const [fileSource, setFileSource] = useState<any>();\n    const [image, setImage] = useState<any>();\n\n    const [newCourse, setNewCourse] = useState<NewCourse>({\n        title: \"\",\n        description: \"\",\n        accessToContent: 0,\n        imageURL: \"\",\n        programStart: 0,\n        contentVisibility: 0,\n        coursePrice: 0,\n        numberOfPurchases: 0,\n        trainer: props.location.state,\n        totalUsers: 0\n    });\n\n    const onImageChange = (event: any) => {\n        const data = new FormData();\n        const reader = new FileReader();\n        const file = event.target.files[0];\n        data.append('backgroundImageFile', file);\n        console.log(data, file);\n        setImage(data);\n        reader.onload = (e: any) => {\n            setFileSource(e.target.result);\n        }\n        reader.readAsDataURL(file);\n    }\n    \n    console.log(props);\n    return(\n        <SettingsContainer className=\"hideScrollbar\">\n            <FlexBox theme={SETTINGS_CONTAINER_THEME} >\n                <SettingsBlock>\n                    <SettingsBlockTitle>\n                        <div style={{ fontSize: '1.5em'}}>\n                            Course Details\n                        </div>\n                    </SettingsBlockTitle>\n                    <FlexBox theme={DETAILS_BLOCK_THEME}>\n                        <FlexBox>\n                            <SettingsInput placeholder=\"Course Name\" onChange={(e) => setNewCourse({ ...newCourse, title: e.target.value })} />\n                        </FlexBox>\n                        <FlexBox>\n                            <SettingsInput placeholder=\"Course Description\" style={{ height: '6em' }} onChange={(e) => setNewCourse({ ...newCourse, description: e.target.value })} />\n                        </FlexBox>\n                    </FlexBox>\n                </SettingsBlock>\n                <SettingsBlock>\n                    <SettingsBlockTitle>\n                        <div style={{ fontSize: '1.5em'}}>\n                            Course Settings\n                        </div>\n                    </SettingsBlockTitle>\n                    <FlexBox theme={DETAILS_BLOCK_THEME} style={{ flexDirection: 'column'}}>\n                        <GridBox theme={COURSE_SETTINGS_BLOCK_THEME}>\n                            <FlexBox theme={COURSE_SETTINGS_BLOCK_LEFT_COLUMN_THEME}>\n                                Content visibility:\n                            </FlexBox>\n                            <FlexBox theme={COURSE_SETTINGS_BLOCK_RIGHT_COLUMN_THEME}>\n                                <FlexBox>\n                                    <input type=\"radio\" id='first' name=\"contentVisibility\" /><label htmlFor=\"first\">Only current lesson is visible</label>\n                                </FlexBox>\n                                <FlexBox>\n                                    <input type=\"radio\" id='second' name=\"contentVisibility\" /><label htmlFor=\"second\">Current and previous lessons are visible</label>\n                                </FlexBox>\n                                <FlexBox>\n                                    <input type=\"radio\" id='third' name=\"contentVisibility\"/><label htmlFor=\"third\">Keep all lessons visible</label>\n                                </FlexBox>\n                            </FlexBox>\n                        </GridBox>\n                        <GridBox theme={COURSE_SETTINGS_BLOCK_THEME}>\n                            <FlexBox theme={COURSE_SETTINGS_BLOCK_LEFT_COLUMN_THEME}>\n                                Access to a course content:\n                            </FlexBox>\n                            <FlexBox theme={COURSE_SETTINGS_BLOCK_RIGHT_COLUMN_THEME}>\n                                <FlexBox>\n                                    <input type=\"radio\" id='first' name=\"accessToCourse\" /><label htmlFor=\"first\">After the previos one is completed</label>\n                                </FlexBox>\n                                <FlexBox>\n                                    <input type=\"radio\" id='second' name=\"accessToCourse\" /><label htmlFor=\"second\">Every day</label>\n                                </FlexBox>\n                            </FlexBox>\n                        </GridBox>\n                        <GridBox theme={COURSE_SETTINGS_BLOCK_THEME}>\n                            <FlexBox theme={COURSE_SETTINGS_BLOCK_LEFT_COLUMN_THEME}>\n                                Program start:\n                            </FlexBox>\n                            <FlexBox theme={COURSE_SETTINGS_BLOCK_RIGHT_COLUMN_THEME}>\n                                <FlexBox>\n                                    <input type=\"radio\" id='first' name=\"programStart\" /><label htmlFor=\"first\">After purchase</label>\n                                </FlexBox>\n                                <FlexBox>\n                                    <input type=\"radio\" id='second' name=\"programStart\" /><label htmlFor=\"second\">On</label>\n                                </FlexBox>\n                            </FlexBox>\n                        </GridBox>\n                    </FlexBox>\n                </SettingsBlock>\n                <SettingsBlock>\n                    <SettingsBlockTitle>\n                        <div style={{ fontSize: '1.5em'}}>\n                            Course background image\n                        </div>\n                    </SettingsBlockTitle>\n                    <FlexBox theme={DETAILS_BLOCK_THEME} style={{ width: '50em'}}>\n                        {/* <form name=\"courseImage\" action=\"/api/uploadFile\" encType=\"multipart/form-data\" method=\"post\">\n                            <SettingsInput name=\"myFile\" placeholder=\"Course Name\" type=\"file\" />\n                            <input type=\"submit\" />\n                        </form> */}\n                        <FlexBox>\n                            <SettingsInput accept=\"image/*\" placeholder=\"Course Name\" type=\"file\" onChange={(e) => onImageChange(e)} />\n                        </FlexBox>\n                        <FlexBox>\n                            <img style={{ width: '26em', height: '16em' }} src={fileSource} />\n                        </FlexBox>\n                    </FlexBox>\n                    <FlexBox theme={CENTER_THEME}>\n                        <PrimaryButton onClick={() => { props.createNewCourse(newCourse, image) } } theme={SAVE_BUTTON_THEME}  >\n                            Create Course\n                        </PrimaryButton>\n                    </FlexBox>\n                </SettingsBlock>\n            </FlexBox>\n        </SettingsContainer>\n    );\n}\n\ninterface MapDispatchToProps {\n    createNewCourse: (newCourse: any, image: any) => void,\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => ({\n    createNewCourse: (newCourse, image) => dispatch(createNewCourseRequest(newCourse, image))\n})\n\nexport default connect(null, mapDispatchToProps)(NewCourseModule);","/Users/nikitakrymov/Projects/iCoach/iCoach/client/src/sagas/clientSagas.ts",[],{"ruleId":"822","replacedBy":"823"},{"ruleId":"824","replacedBy":"825"},{"ruleId":"826","severity":1,"message":"827","line":15,"column":8,"nodeType":"828","endLine":15,"endColumn":10,"suggestions":"829"},{"ruleId":"830","severity":1,"message":"831","line":1,"column":8,"nodeType":"832","messageId":"833","endLine":1,"endColumn":9},{"ruleId":"834","severity":1,"message":"835","line":167,"column":29,"nodeType":"836","endLine":167,"endColumn":95},{"ruleId":"837","severity":1,"message":"838","line":186,"column":55,"nodeType":"839","messageId":"840","endLine":186,"endColumn":57},{"ruleId":"830","severity":1,"message":"841","line":4,"column":8,"nodeType":"832","messageId":"833","endLine":4,"endColumn":20},{"ruleId":"830","severity":1,"message":"842","line":11,"column":8,"nodeType":"832","messageId":"833","endLine":11,"endColumn":21},{"ruleId":"830","severity":1,"message":"843","line":16,"column":7,"nodeType":"832","messageId":"833","endLine":16,"endColumn":23},{"ruleId":"830","severity":1,"message":"844","line":22,"column":7,"nodeType":"832","messageId":"833","endLine":22,"endColumn":18},{"ruleId":"830","severity":1,"message":"845","line":27,"column":7,"nodeType":"832","messageId":"833","endLine":27,"endColumn":18},{"ruleId":"830","severity":1,"message":"846","line":31,"column":7,"nodeType":"832","messageId":"833","endLine":31,"endColumn":24},{"ruleId":"830","severity":1,"message":"847","line":8,"column":8,"nodeType":"832","messageId":"833","endLine":8,"endColumn":25},{"ruleId":"830","severity":1,"message":"848","line":16,"column":19,"nodeType":"832","messageId":"833","endLine":16,"endColumn":27},{"ruleId":"830","severity":1,"message":"849","line":19,"column":8,"nodeType":"832","messageId":"833","endLine":19,"endColumn":34},{"ruleId":"826","severity":1,"message":"827","line":33,"column":8,"nodeType":"828","endLine":33,"endColumn":10,"suggestions":"850"},{"ruleId":"830","severity":1,"message":"851","line":35,"column":33,"nodeType":"832","messageId":"833","endLine":35,"endColumn":55},{"ruleId":"830","severity":1,"message":"852","line":36,"column":12,"nodeType":"832","messageId":"833","endLine":36,"endColumn":37},{"ruleId":"830","severity":1,"message":"853","line":36,"column":39,"nodeType":"832","messageId":"833","endLine":36,"endColumn":67},{"ruleId":"830","severity":1,"message":"854","line":18,"column":10,"nodeType":"832","messageId":"833","endLine":18,"endColumn":16},{"ruleId":"830","severity":1,"message":"855","line":16,"column":10,"nodeType":"832","messageId":"833","endLine":16,"endColumn":16},{"ruleId":"830","severity":1,"message":"856","line":17,"column":10,"nodeType":"832","messageId":"833","endLine":17,"endColumn":18},{"ruleId":"830","severity":1,"message":"857","line":18,"column":10,"nodeType":"832","messageId":"833","endLine":18,"endColumn":17},{"ruleId":"826","severity":1,"message":"858","line":26,"column":8,"nodeType":"828","endLine":26,"endColumn":10,"suggestions":"859"},{"ruleId":"830","severity":1,"message":"860","line":1,"column":28,"nodeType":"832","messageId":"833","endLine":1,"endColumn":36},{"ruleId":"830","severity":1,"message":"861","line":13,"column":8,"nodeType":"832","messageId":"833","endLine":13,"endColumn":28},{"ruleId":"826","severity":1,"message":"858","line":28,"column":8,"nodeType":"828","endLine":28,"endColumn":10,"suggestions":"862"},{"ruleId":"830","severity":1,"message":"863","line":8,"column":8,"nodeType":"832","messageId":"833","endLine":8,"endColumn":14},{"ruleId":"830","severity":1,"message":"864","line":11,"column":10,"nodeType":"832","messageId":"833","endLine":11,"endColumn":20},{"ruleId":"830","severity":1,"message":"865","line":4,"column":8,"nodeType":"832","messageId":"833","endLine":4,"endColumn":15},{"ruleId":"830","severity":1,"message":"866","line":5,"column":8,"nodeType":"832","messageId":"833","endLine":5,"endColumn":16},{"ruleId":"830","severity":1,"message":"867","line":7,"column":8,"nodeType":"832","messageId":"833","endLine":7,"endColumn":30},{"ruleId":"830","severity":1,"message":"868","line":18,"column":12,"nodeType":"832","messageId":"833","endLine":18,"endColumn":22},{"ruleId":"830","severity":1,"message":"869","line":19,"column":24,"nodeType":"832","messageId":"833","endLine":19,"endColumn":37},{"ruleId":"830","severity":1,"message":"870","line":21,"column":12,"nodeType":"832","messageId":"833","endLine":21,"endColumn":24},{"ruleId":"830","severity":1,"message":"871","line":23,"column":11,"nodeType":"832","messageId":"833","endLine":23,"endColumn":19},{"ruleId":"830","severity":1,"message":"872","line":29,"column":11,"nodeType":"832","messageId":"833","endLine":29,"endColumn":26},{"ruleId":"830","severity":1,"message":"873","line":49,"column":11,"nodeType":"832","messageId":"833","endLine":49,"endColumn":24},{"ruleId":"830","severity":1,"message":"874","line":20,"column":12,"nodeType":"832","messageId":"833","endLine":20,"endColumn":22},{"ruleId":"830","severity":1,"message":"875","line":2,"column":8,"nodeType":"832","messageId":"833","endLine":2,"endColumn":21},{"ruleId":"830","severity":1,"message":"865","line":3,"column":8,"nodeType":"832","messageId":"833","endLine":3,"endColumn":15},{"ruleId":"830","severity":1,"message":"876","line":11,"column":10,"nodeType":"832","messageId":"833","endLine":11,"endColumn":13},{"ruleId":"830","severity":1,"message":"877","line":2,"column":10,"nodeType":"832","messageId":"833","endLine":2,"endColumn":15},{"ruleId":"822","replacedBy":"878"},{"ruleId":"824","replacedBy":"879"},{"ruleId":"830","severity":1,"message":"880","line":2,"column":8,"nodeType":"832","messageId":"833","endLine":2,"endColumn":18},{"ruleId":"830","severity":1,"message":"865","line":3,"column":8,"nodeType":"832","messageId":"833","endLine":3,"endColumn":15},{"ruleId":"830","severity":1,"message":"881","line":9,"column":7,"nodeType":"832","messageId":"833","endLine":9,"endColumn":22},{"ruleId":"830","severity":1,"message":"882","line":4,"column":8,"nodeType":"832","messageId":"833","endLine":4,"endColumn":22},{"ruleId":"830","severity":1,"message":"883","line":6,"column":8,"nodeType":"832","messageId":"833","endLine":6,"endColumn":25},{"ruleId":"830","severity":1,"message":"884","line":1,"column":33,"nodeType":"832","messageId":"833","endLine":1,"endColumn":39},{"ruleId":"822","replacedBy":"885"},{"ruleId":"824","replacedBy":"886"},{"ruleId":"830","severity":1,"message":"855","line":3,"column":10,"nodeType":"832","messageId":"833","endLine":3,"endColumn":16},{"ruleId":"830","severity":1,"message":"887","line":1,"column":10,"nodeType":"832","messageId":"833","endLine":1,"endColumn":15},{"ruleId":"837","severity":1,"message":"838","line":10,"column":37,"nodeType":"839","messageId":"840","endLine":10,"endColumn":39},{"ruleId":"837","severity":1,"message":"838","line":23,"column":37,"nodeType":"839","messageId":"840","endLine":23,"endColumn":39},{"ruleId":"837","severity":1,"message":"838","line":35,"column":37,"nodeType":"839","messageId":"840","endLine":35,"endColumn":39},{"ruleId":"830","severity":1,"message":"888","line":43,"column":11,"nodeType":"832","messageId":"833","endLine":43,"endColumn":22},{"ruleId":"830","severity":1,"message":"889","line":44,"column":11,"nodeType":"832","messageId":"833","endLine":44,"endColumn":20},{"ruleId":"837","severity":1,"message":"890","line":60,"column":29,"nodeType":"839","messageId":"891","endLine":60,"endColumn":31},{"ruleId":"837","severity":1,"message":"890","line":79,"column":29,"nodeType":"839","messageId":"891","endLine":79,"endColumn":31},{"ruleId":"826","severity":1,"message":"827","line":22,"column":8,"nodeType":"828","endLine":22,"endColumn":10,"suggestions":"892"},{"ruleId":"830","severity":1,"message":"893","line":1,"column":17,"nodeType":"832","messageId":"833","endLine":1,"endColumn":26},{"ruleId":"830","severity":1,"message":"894","line":7,"column":10,"nodeType":"832","messageId":"833","endLine":7,"endColumn":24},{"ruleId":"830","severity":1,"message":"895","line":11,"column":7,"nodeType":"832","messageId":"833","endLine":11,"endColumn":17},{"ruleId":"830","severity":1,"message":"896","line":44,"column":7,"nodeType":"832","messageId":"833","endLine":44,"endColumn":29},{"ruleId":"830","severity":1,"message":"897","line":94,"column":12,"nodeType":"832","messageId":"833","endLine":94,"endColumn":22},{"ruleId":"830","severity":1,"message":"898","line":94,"column":24,"nodeType":"832","messageId":"833","endLine":94,"endColumn":37},{"ruleId":"830","severity":1,"message":"899","line":95,"column":12,"nodeType":"832","messageId":"833","endLine":95,"endColumn":29},{"ruleId":"830","severity":1,"message":"900","line":95,"column":31,"nodeType":"832","messageId":"833","endLine":95,"endColumn":51},{"ruleId":"830","severity":1,"message":"901","line":96,"column":12,"nodeType":"832","messageId":"833","endLine":96,"endColumn":23},{"ruleId":"830","severity":1,"message":"902","line":96,"column":25,"nodeType":"832","messageId":"833","endLine":96,"endColumn":39},{"ruleId":"830","severity":1,"message":"903","line":6,"column":8,"nodeType":"832","messageId":"833","endLine":6,"endColumn":22},{"ruleId":"837","severity":1,"message":"838","line":34,"column":45,"nodeType":"839","messageId":"840","endLine":34,"endColumn":47},{"ruleId":"830","severity":1,"message":"904","line":57,"column":12,"nodeType":"832","messageId":"833","endLine":57,"endColumn":26},{"ruleId":"830","severity":1,"message":"905","line":57,"column":28,"nodeType":"832","messageId":"833","endLine":57,"endColumn":45},{"ruleId":"906","severity":1,"message":"907","line":9,"column":5,"nodeType":"832","messageId":"833","endLine":9,"endColumn":9},{"ruleId":"822","replacedBy":"823"},{"ruleId":"824","replacedBy":"825"},{"ruleId":"906","severity":1,"message":"908","line":1,"column":17,"nodeType":"832","messageId":"833","endLine":1,"endColumn":26},{"ruleId":"906","severity":1,"message":"909","line":214,"column":12,"nodeType":"832","messageId":"833","endLine":214,"endColumn":25},{"ruleId":"826","severity":1,"message":"910","line":221,"column":8,"nodeType":"828","endLine":221,"endColumn":24,"suggestions":"911"},{"ruleId":"906","severity":1,"message":"912","line":13,"column":9,"nodeType":"832","messageId":"833","endLine":13,"endColumn":11},{"ruleId":"906","severity":1,"message":"913","line":14,"column":9,"nodeType":"832","messageId":"833","endLine":14,"endColumn":11},{"ruleId":"906","severity":1,"message":"908","line":1,"column":17,"nodeType":"832","messageId":"833","endLine":1,"endColumn":26},{"ruleId":"906","severity":1,"message":"914","line":5,"column":8,"nodeType":"832","messageId":"833","endLine":5,"endColumn":15},{"ruleId":"906","severity":1,"message":"915","line":86,"column":7,"nodeType":"832","messageId":"833","endLine":86,"endColumn":27},{"ruleId":"906","severity":1,"message":"909","line":180,"column":12,"nodeType":"832","messageId":"833","endLine":180,"endColumn":25},{"ruleId":"826","severity":1,"message":"910","line":187,"column":8,"nodeType":"828","endLine":187,"endColumn":53,"suggestions":"916"},{"ruleId":"906","severity":1,"message":"908","line":1,"column":17,"nodeType":"832","messageId":"833","endLine":1,"endColumn":26},{"ruleId":"906","severity":1,"message":"909","line":27,"column":12,"nodeType":"832","messageId":"833","endLine":27,"endColumn":25},{"ruleId":"826","severity":1,"message":"910","line":34,"column":8,"nodeType":"828","endLine":34,"endColumn":40,"suggestions":"917"},{"ruleId":"906","severity":1,"message":"908","line":1,"column":17,"nodeType":"832","messageId":"833","endLine":1,"endColumn":26},{"ruleId":"906","severity":1,"message":"914","line":5,"column":8,"nodeType":"832","messageId":"833","endLine":5,"endColumn":15},{"ruleId":"906","severity":1,"message":"915","line":25,"column":7,"nodeType":"832","messageId":"833","endLine":25,"endColumn":27},{"ruleId":"906","severity":1,"message":"909","line":39,"column":12,"nodeType":"832","messageId":"833","endLine":39,"endColumn":25},{"ruleId":"826","severity":1,"message":"910","line":46,"column":8,"nodeType":"828","endLine":46,"endColumn":40,"suggestions":"918"},{"ruleId":"830","severity":1,"message":"919","line":1,"column":10,"nodeType":"832","messageId":"833","endLine":1,"endColumn":22},{"ruleId":"830","severity":1,"message":"920","line":4,"column":8,"nodeType":"832","messageId":"833","endLine":4,"endColumn":20},{"ruleId":"822","replacedBy":"921"},{"ruleId":"824","replacedBy":"922"},{"ruleId":"830","severity":1,"message":"923","line":8,"column":10,"nodeType":"832","messageId":"833","endLine":8,"endColumn":16},{"ruleId":"830","severity":1,"message":"924","line":9,"column":10,"nodeType":"832","messageId":"833","endLine":9,"endColumn":17},{"ruleId":"830","severity":1,"message":"925","line":1,"column":18,"nodeType":"832","messageId":"833","endLine":1,"endColumn":27},{"ruleId":"830","severity":1,"message":"877","line":2,"column":10,"nodeType":"832","messageId":"833","endLine":2,"endColumn":15},{"ruleId":"830","severity":1,"message":"877","line":2,"column":10,"nodeType":"832","messageId":"833","endLine":2,"endColumn":15},{"ruleId":"834","severity":1,"message":"835","line":173,"column":29,"nodeType":"836","endLine":173,"endColumn":95},"no-native-reassign",["926"],"no-negated-in-lhs",["927"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["928"],"@typescript-eslint/no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'AccountInput' is defined but never used.","'PrimaryButton' is defined but never used.","'PAGE_TITLE_THEME' is assigned a value but never used.","'TITLE_THEME' is assigned a value but never used.","'INPUT_THEME' is assigned a value but never used.","'SAVE_BUTTON_THEME' is assigned a value but never used.","'DashboardNewUsers' is defined but never used.","'useStore' is defined but never used.","'CoursePerformanceContainer' is defined but never used.",["929"],"'setUserBlockTimePeriod' is assigned a value but never used.","'activeUserBlockTimePeriod' is assigned a value but never used.","'setActiveUserBlockTimePeriod' is assigned a value but never used.","'Lesson' is defined but never used.","'Course' is defined but never used.","'AppState' is defined but never used.","'connect' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["930"],"'useState' is defined but never used.","'CreateNewCourseModal' is defined but never used.",["931"],"'Select' is defined but never used.","'countReset' is defined but never used.","'FlexBox' is defined but never used.","'CheckBox' is defined but never used.","'DraftLessonListElement' is defined but never used.","'isDragging' is assigned a value but never used.","'setLessonList' is assigned a value but never used.","'draggingNode' is assigned a value but never used.","'getStyle' is assigned a value but never used.","'handleDragStart' is assigned a value but never used.","'handleDragEnd' is assigned a value but never used.","'lessonList' is assigned a value but never used.","'AccountButton' is defined but never used.","'url' is defined but never used.","'theme' is defined but never used.",["926"],["927"],"'BACKGROUND' is defined but never used.","'CONTENT_ELEMENT' is assigned a value but never used.","'InBlockSpinner' is defined but never used.","'UserCardContainer' is defined but never used.","'select' is defined but never used.",["926"],["927"],"'abort' is defined but never used.","'currentDate' is assigned a value but never used.","'priorDate' is assigned a value but never used.","Array.prototype.filter() expects a return value from arrow function.","expectedInside",["932"],"'useEffect' is defined but never used.","'sortArrayToday' is defined but never used.","'DATE_ARRAY' is assigned a value but never used.","'countRevenueDifference' is assigned a value but never used.","'isPositive' is assigned a value but never used.","'setIsPositive' is assigned a value but never used.","'revenueDifference' is assigned a value but never used.","'setRevenueDifference' is assigned a value but never used.","'sortedSales' is assigned a value but never used.","'setSortedSales' is assigned a value but never used.","'ChartOptionTab' is defined but never used.","'selectedOption' is assigned a value but never used.","'setSelectedOption' is assigned a value but never used.","no-unused-vars","'fill' is assigned a value but never used.","'Component' is defined but never used.","'chartInstance' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'chartConfig'. Either include it or remove the dependency array.",["933"],"'sx' is assigned a value but never used.","'sy' is assigned a value but never used.","'Chartjs' is defined but never used.","'renderTimeFrameValue' is assigned a value but never used.",["934"],["935"],["936"],"'defaultProps' is defined but never used.","'SettingsIcon' is defined but never used.",["926"],["927"],"'CLIENT' is defined but never used.","'TRAINER' is defined but never used.","'keyframes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"937","fix":"938"},{"desc":"937","fix":"939"},{"desc":"937","fix":"940"},{"desc":"937","fix":"941"},{"desc":"937","fix":"942"},{"desc":"943","fix":"944"},{"desc":"945","fix":"946"},{"desc":"947","fix":"948"},{"desc":"947","fix":"949"},"Update the dependencies array to be: [props]",{"range":"950","text":"951"},{"range":"952","text":"951"},{"range":"953","text":"951"},{"range":"954","text":"951"},{"range":"955","text":"951"},"Update the dependencies array to be: [chartConfig, chartContainer]",{"range":"956","text":"957"},"Update the dependencies array to be: [props.course, props.timePeriod, props.sales, chartConfig]",{"range":"958","text":"959"},"Update the dependencies array to be: [chartConfig, props.course, props.timePeriod]",{"range":"960","text":"961"},{"range":"962","text":"961"},[468,470],"[props]",[1863,1865],[1175,1177],[1127,1129],[784,786],[7094,7110],"[chartConfig, chartContainer]",[5724,5769],"[props.course, props.timePeriod, props.sales, chartConfig]",[1172,1204],"[chartConfig, props.course, props.timePeriod]",[1581,1613]]